{"version":3,"sources":["../src/modal.js"],"names":["KeyCodes","ESCAPE","Selectors","DATA_MODAL","DATA_MODAL_BUTTON","DATA_VISIBLE","DATA_CLOSE","DATA_PARENT","ARIA_HIDDEN","ARIA_MODAL","ROLE","TABINDEX","NO_SCROLL","Events","KEYDOWN","CLICK","RESIZE","Messages","NO_BUTTON_ID_ERROR","NO_MODAL_ID_ERROR","NO_MODAL_ERROR","id","Modal","_render","bind","_handleClose","_handleOverlayClick","_handleEscapeKeyPress","_modals","_modalButtons","_activeModalButton","_activeModalOverlay","_activeModal","_activeModalId","_activeModalOverlayAttr","_activeModalSelector","_activeModalCloseButtons","_modalContainerAttr","forEach","element","setAttribute","length","instance","_setupModal","button","addEventListener","removeEventListener","event","preventDefault","target","getAttribute","console","error","document","querySelector","_handleScrollStop","captureFocus","focus","scrollTop","iOSMobile","style","cursor","modalId","modal","modalWrapper","_handleReturnFocus","_handleScrollRestore","releaseFocus","removeAttribute","which","body","classList","remove","documentElement","add","Utils"],"mappings":"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","sourcesContent":["import Utils, { iOSMobile, getFocusableElements, nodeListToArray } from \"./utils\"\n\nconst KeyCodes = {\n  ESCAPE: 27,\n}\n\nconst Selectors = {\n  // unique\n  DATA_MODAL: \"data-modal\",\n  DATA_MODAL_BUTTON: \"data-modal-button\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_CLOSE: \"data-close\",\n  DATA_PARENT: \"data-parent\",\n  // accessibility\n  ARIA_HIDDEN: \"aria-hidden\",\n  ARIA_MODAL: \"aria-modal\",\n  ROLE: \"role\",\n  TABINDEX: \"tabindex\",\n  // classes\n  NO_SCROLL: \"no-scroll\",\n}\n\nconst Events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n  RESIZE: \"resize\",\n}\n\nconst Messages = {\n  NO_BUTTON_ID_ERROR: \"Could not find an id on your [data-modal-button] element. Modal can't be opened.\",\n  NO_MODAL_ID_ERROR: \"Could not detect an id on your [data-modal] element. Please add a value matching a button's [data-modal-button] attribute.\",\n  NO_MODAL_ERROR: id => `Could not find a [data-parent='${id}'] attribute within your [data-modal='${id}'] element.`\n}\n\n/**\n * Modal component class.\n * @module Modal\n * @requires Utils\n */\nexport default class Modal extends Utils {\n  constructor() {\n    super()\n\n    // events\n    this._render = this._render.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleOverlayClick = this._handleOverlayClick.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n\n    // all modals\n    this._modals = []\n    this._modalButtons = []\n\n    // active modal\n    this._activeModalButton = {}\n    this._activeModalOverlay = {}\n    this._activeModal = {}\n    this._activeModalId = \"\"\n    this._activeModalOverlayAttr = \"\"\n    this._activeModalSelector = \"\"\n    this._activeModalCloseButtons = []\n\n    // attribute helpers\n    this._modalContainerAttr = `[${Selectors.DATA_MODAL}]`\n  }\n\n  // public\n\n  /**\n   * Add accessible attributes to modals.\n   * Begin listening to elements with [data-modal-button]\n   */\n  start() {\n    this._modals = nodeListToArray(this._modalContainerAttr)\n    this._modalButtons = nodeListToArray(`[${Selectors.DATA_MODAL_BUTTON}]`)\n\n    getFocusableElements(this._modalContainerAttr).forEach(element => {\n      element.setAttribute(Selectors.TABINDEX, \"-1\")\n    })\n\n    if (this._modals.length) {\n      this._modals.forEach(instance => {\n        this._setupModal(instance)\n      })\n    }\n\n    if (this._modalButtons.length) {\n      this._modalButtons.forEach(button => {\n        button.addEventListener(Events.CLICK, this._render)\n      })\n    }\n  }\n\n  /**\n   * Stop listening to modal buttons\n   */\n  stop() {\n    this._modalButtons.forEach(button => {\n      button.removeEventListener(Events.CLICK, this._render)\n    })\n  }\n\n  // private\n\n  /**\n   * Find a button through event.target, then render the corresponding modal attribute via matching target id\n   * @param {Object} event - The event object\n   */\n  _render(event) {\n    event.preventDefault()\n    this._activeModalButton = event.target\n    this._activeModalId = this._activeModalButton.getAttribute(Selectors.DATA_MODAL_BUTTON)\n\n    if (!this._activeModalId) {\n      return console.error(Messages.NO_BUTTON_ID_ERROR)\n    }\n\n    this._activeModalOverlay = document.querySelector(`[${Selectors.DATA_MODAL}=\"${this._activeModalId}\"]`)\n    this._activeModalSelector = `[${Selectors.DATA_PARENT}='${this._activeModalId}']`\n    this._activeModal = this._activeModalOverlay.querySelector(this._activeModalSelector)\n    this._activeModalCloseButtons = nodeListToArray(`${this._activeModalSelector} [${Selectors.DATA_CLOSE}]`)\n\n    // allow focusable elements to be focused\n    getFocusableElements(this._activeModalSelector).forEach(element => {\n      element.setAttribute(Selectors.TABINDEX, \"0\")\n    })\n\n    // capture focus, stop scrolling, and toggle attributes for visibility\n    this._handleScrollStop()\n    this.captureFocus(this._activeModalSelector)\n    this._activeModalOverlay.setAttribute(Selectors.ARIA_HIDDEN, \"false\")\n    this._activeModalOverlay.setAttribute(Selectors.DATA_VISIBLE, \"true\")\n\n    // focus the modal\n    this._activeModal.setAttribute(Selectors.TABINDEX, \"-1\")\n    this._activeModal.focus()\n\n    // offset slight scroll caused by this._activeModal.focus()\n    this._activeModalOverlay.scrollTop = 0\n\n    // on ios devices, let the modal close on overlay click\n    if (iOSMobile) {\n      this._activeModalOverlay.style.cursor = \"pointer\"\n    }\n\n    // begin listening to events\n    document.addEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.addEventListener(Events.CLICK, this._handleOverlayClick)\n    this._activeModalCloseButtons.forEach(button => {\n      button.addEventListener(Events.CLICK, this._handleClose)\n    })\n  }\n\n  _setupModal(instance) {\n    const modalId = instance.getAttribute(Selectors.DATA_MODAL)\n    \n    if (!modalId) {\n      return console.error(Messages.NO_MODAL_ID_ERROR)\n    } \n\n    const modal = instance.querySelector(`[${Selectors.DATA_PARENT}='${modalId}']`)\n\n    if (!modal) {\n      return console.error(Messages.NO_MODAL_ERROR(modalId))\n    }\n\n    const modalWrapper = document.querySelector(`[${Selectors.DATA_MODAL}='${modalId}']`)\n\n    modalWrapper.setAttribute(Selectors.ARIA_HIDDEN, \"true\")\n    modalWrapper.setAttribute(Selectors.DATA_VISIBLE, \"false\")\n    modal.setAttribute(Selectors.ARIA_MODAL, \"true\")\n    modal.setAttribute(Selectors.ROLE, \"dialog\")\n  }\n\n  /**\n   * Turn off event listeners and reset focus to last selected DOM node (button)\n   * @param {Object} event - The event object\n   */\n  _handleClose(event) {\n    event.preventDefault()\n    this._activeModalOverlay.setAttribute(Selectors.DATA_VISIBLE, \"false\")\n    this._handleReturnFocus()\n    this._handleScrollRestore()\n    this.releaseFocus()\n    this._activeModalOverlay.setAttribute(Selectors.ARIA_HIDDEN, \"true\")\n    this._activeModal.removeAttribute(Selectors.TABINDEX)\n\n    getFocusableElements(this._activeModalSelector).forEach(element => {\n      element.setAttribute(Selectors.TABINDEX, \"-1\")\n    })\n\n    if (iOSMobile) {\n      this._activeModalOverlay.style.cursor = \"auto\"\n    }\n\n    // stop listening to events\n    document.removeEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.removeEventListener(Events.CLICK, this._handleOverlayClick)\n    this._activeModalCloseButtons.forEach(button => {\n      button.removeEventListener(Events.CLICK, this._handleClose)\n    })\n\n    this._activeModalId = null\n  }\n\n  /**\n   * Handles click event on the modal background to close it.\n   * @param {Object} event - The event object\n   */\n  _handleOverlayClick(event) {\n    if (event.target === this._activeModalOverlay) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Handles escape key event to close the current modal\n   * @param {Object} event - The event object\n   */\n  _handleEscapeKeyPress(event) {\n    if (event.which === KeyCodes.ESCAPE) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Returns focus to the last focused element before the modal was called.\n   * @param {Object} button - The current modal's corresponding button.\n   */\n  _handleReturnFocus() {\n    this._activeModalButton.setAttribute(Selectors.TABINDEX, \"-1\")\n    this._activeModalButton.focus()\n    this._activeModalButton.removeAttribute(Selectors.TABINDEX)\n  }\n\n  /**\n   * Restores scroll behavior to <html> and <body>\n   */\n  _handleScrollRestore() {\n    document.body.classList.remove(Selectors.NO_SCROLL)\n    document.documentElement.classList.remove(Selectors.NO_SCROLL)\n  }\n\n  /**\n   * Prevents scroll behavior on <html> and <body>\n   */\n  _handleScrollStop() {\n    document.body.classList.add(Selectors.NO_SCROLL)\n    document.documentElement.classList.add(Selectors.NO_SCROLL)\n  }\n}\n"],"file":"modal.js"}