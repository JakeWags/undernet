{"version":3,"sources":["../src/tooltip.js"],"names":["KeyCodes","Selectors","Events","Messages","Tooltip","document","querySelectorAll","forEach","instance","id","getAttribute","trigger","querySelector","tooltip","getElementById","_setupTooltip","setAttribute","_isLeftOrRight","_alignTooltip","element","property","parseInt","window","getComputedStyle","slice","classList","contains","triggerLength","_getComputedLength","tooltipLength","triggerIsLongest","offset","style","top","left"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,EAAjB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,MAAM,GAAG,EAAf;AACA,IAAMC,QAAQ,GAAG,EAAjB;;IAUqBC,O;AACnB,qBAAc;AAAA;AAAE;;;;4BAIR;AAAA;;AACNC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,EAA4CC,OAA5C,CAAoD,UAAAC,QAAQ,EAAI;AAC9D,YAAMC,EAAE,GAAGD,QAAQ,CAACE,YAAT,CAAsB,cAAtB,CAAX;AACA,YAAMC,OAAO,GAAGH,QAAQ,CAACI,aAAT,0BAAwCH,EAAxC,SAAhB;AACA,YAAMI,OAAO,GAAGR,QAAQ,CAACS,cAAT,CAAwBL,EAAxB,CAAhB;;AACA,QAAA,KAAI,CAACM,aAAL,CAAmBJ,OAAnB,EAA4BE,OAA5B,EAAqCJ,EAArC;AACD,OALD;AAMD;;;kCAIaE,O,EAASE,O,EAASJ,E,EAAI;AAClCE,MAAAA,OAAO,CAACK,YAAR,CAAqB,kBAArB,EAAyCP,EAAzC;AACAI,MAAAA,OAAO,CAACG,YAAR,CAAqB,MAArB,EAA6B,SAA7B;;AAEA,UAAI,KAAKC,cAAL,CAAoBJ,OAApB,CAAJ,EAAkC;AAChC,aAAKK,aAAL,CAAmBP,OAAnB,EAA4BE,OAA5B,EAAqC,QAArC;AACD,OAFD,MAEO;AACL,aAAKK,aAAL,CAAmBP,OAAnB,EAA4BE,OAA5B,EAAqC,OAArC;AACD;AACF;;;uCAEkBM,O,EAASC,Q,EAAU;AACpC,aAAOC,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBJ,OAAxB,EAAiCC,QAAjC,EAA2CI,KAA3C,CAAiD,CAAjD,EAAoD,CAAC,CAArD,CAAD,CAAf;AACD;;;mCAEcX,O,EAAS;AACtB,aAAOA,OAAO,CAACY,SAAR,CAAkBC,QAAlB,CAA2B,cAA3B,KAA8Cb,OAAO,CAACY,SAAR,CAAkBC,QAAlB,CAA2B,eAA3B,CAArD;AACD;;;kCAEaf,O,EAASE,O,EAASO,Q,EAAU;AACxC,UAAMO,aAAa,GAAG,KAAKC,kBAAL,CAAwBjB,OAAxB,EAAiCS,QAAjC,CAAtB;;AACA,UAAMS,aAAa,GAAG,KAAKD,kBAAL,CAAwBf,OAAxB,EAAiCO,QAAjC,CAAtB;;AACA,UAAMU,gBAAgB,GAAGH,aAAa,GAAGE,aAAzC;AAEA,UAAME,MAAM,GAAGD,gBAAgB,GAC1B,CAACH,aAAa,GAAGE,aAAjB,IAAkC,CADR,GAE1B,CAACA,aAAa,GAAGF,aAAjB,IAAkC,CAAC,CAFxC;AAIA,UAAIP,QAAQ,KAAK,QAAjB,EACEP,OAAO,CAACmB,KAAR,CAAcC,GAAd,aAAuBF,MAAvB,QADF,KAEK;AACHlB,QAAAA,OAAO,CAACmB,KAAR,CAAcE,IAAd,aAAwBH,MAAxB;AACD;AACF","sourcesContent":["const KeyCodes = {}\r\nconst Selectors = {}\r\nconst Events = {}\r\nconst Messages = {\r\n  // no tooltip id, can't create tooltip\r\n}\r\n\r\n\r\n\r\n/**\r\n * Tooltip component class.\r\n * @module Tooltip\r\n */\r\nexport default class Tooltip {\r\n  constructor() {}\r\n\r\n  // public\r\n\r\n  start() {\r\n    document.querySelectorAll(\"[data-tooltip]\").forEach(instance => {\r\n      const id = instance.getAttribute(\"data-tooltip\")\r\n      const trigger = instance.querySelector(`[data-parent=\"${id}\"]`)\r\n      const tooltip = document.getElementById(id)\r\n      this._setupTooltip(trigger, tooltip, id)\r\n    })\r\n  }\r\n\r\n  // private\r\n\r\n  _setupTooltip(trigger, tooltip, id) {\r\n    trigger.setAttribute(\"aria-describedby\", id)\r\n    tooltip.setAttribute(\"role\", \"tooltip\")\r\n\r\n    if (this._isLeftOrRight(tooltip)) {\r\n      this._alignTooltip(trigger, tooltip, \"height\")\r\n    } else {\r\n      this._alignTooltip(trigger, tooltip, \"width\")\r\n    }\r\n  }\r\n\r\n  _getComputedLength(element, property) {\r\n    return parseInt(window.getComputedStyle(element)[property].slice(0, -2))\r\n  }\r\n\r\n  _isLeftOrRight(tooltip) {\r\n    return tooltip.classList.contains(\"is-drop-left\") || tooltip.classList.contains(\"is-drop-right\")\r\n  }\r\n\r\n  _alignTooltip(trigger, tooltip, property) {\r\n    const triggerLength = this._getComputedLength(trigger, property)\r\n    const tooltipLength = this._getComputedLength(tooltip, property)\r\n    const triggerIsLongest = triggerLength > tooltipLength\r\n\r\n    const offset = triggerIsLongest \r\n      ? ((triggerLength - tooltipLength) / 2) \r\n      : ((tooltipLength - triggerLength) / -2)\r\n\r\n    if (property === \"height\")\r\n      tooltip.style.top = `${offset}px`\r\n    else {\r\n      tooltip.style.left = `${offset}px`\r\n    }\r\n  }\r\n}\r\n"],"file":"tooltip.js"}