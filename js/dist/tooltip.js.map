{"version":3,"sources":["../src/tooltip.js"],"names":["KeyCodes","Selectors","Events","Messages","Tooltip","_iosMobile","test","navigator","userAgent","_setCursorPointer","bind","_setCursorAuto","_allTooltipTriggers","document","querySelectorAll","forEach","element","id","getAttribute","trigger","querySelector","tooltip","getElementById","_setupTooltip","removeEventListener","event","preventDefault","stopPropagation","body","addEventListener","style","cursor","setAttribute","_isLeftOrRight","_alignTooltip","property","parseInt","window","getComputedStyle","slice","classes","classList","contains","triggerLength","_getComputedLength","tooltipLength","triggerIsLongest","offset","top","left"],"mappings":"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","sourcesContent":["// TODO: Fill out KeyCodes, Selectors, Events, and Messages\r\n// TODO: Add tests\r\n\r\nconst KeyCodes = {}\r\nconst Selectors = {}\r\nconst Events = {}\r\nconst Messages = {\r\n  // no tooltip id, can't create tooltip\r\n}\r\n\r\n/**\r\n * Tooltip component class.\r\n * @module Tooltip\r\n */\r\nexport default class Tooltip {\r\n  constructor() {\r\n    this._iosMobile = /(iphone|ipod|ipad)/i.test(navigator.userAgent)\r\n\r\n    // events\r\n    this._setCursorPointer = this._setCursorPointer.bind(this)\r\n    this._setCursorAuto = this._setCursorAuto.bind(this)\r\n\r\n    // active tooltip (touch devices only)\r\n    this._allTooltipTriggers = []\r\n  }\r\n\r\n  // public\r\n\r\n  start() {\r\n    this._allTooltipTriggers = document.querySelectorAll(\"[data-tooltip]\")\r\n\r\n    this._allTooltipTriggers.forEach(element => {\r\n      const id = element.getAttribute(\"data-tooltip\")\r\n      const trigger = element.querySelector(`[data-target=\"${id}\"]`)\r\n      const tooltip = document.getElementById(id)\r\n      this._setupTooltip(trigger, tooltip, id)\r\n    })\r\n  }\r\n\r\n  stop() {\r\n    if (this._iosMobile) {\r\n      this._allTooltipTriggers.forEach(element => {\r\n        element.removeEventListener(\"click\", this._setCursorPointer)\r\n      })\r\n    }\r\n  }\r\n\r\n  // private\r\n\r\n  _setCursorPointer(event) {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    document.body.addEventListener(\"click\", this._setCursorAuto)\r\n    document.body.style.cursor = \"pointer\"\r\n  }\r\n\r\n  _setCursorAuto(event) {\r\n    event.preventDefault()\r\n    document.body.removeEventListener(\"click\", this._setCursorAuto)\r\n    document.body.style.cursor = \"auto\"\r\n  }\r\n\r\n  _setupTooltip(trigger, tooltip, id) {\r\n    trigger.setAttribute(\"aria-describedby\", id)\r\n    tooltip.setAttribute(\"role\", \"tooltip\")\r\n\r\n    if (this._iosMobile) {\r\n      trigger.addEventListener(\"click\", this._setCursorPointer)\r\n    }\r\n\r\n    if (this._isLeftOrRight(tooltip)) {\r\n      this._alignTooltip(trigger, tooltip, \"height\")\r\n    } else {\r\n      this._alignTooltip(trigger, tooltip, \"width\")\r\n    }\r\n  }\r\n\r\n  _getComputedLength(element, property) {\r\n    return parseInt(window.getComputedStyle(element)[property].slice(0, -2))\r\n  }\r\n\r\n  _isLeftOrRight(tooltip) {\r\n    const classes = tooltip.classList\r\n    return classes.contains(\"is-drop-left\") || classes.contains(\"is-drop-right\")\r\n  }\r\n\r\n  _alignTooltip(trigger, tooltip, property) {\r\n    const triggerLength = this._getComputedLength(trigger, property)\r\n    const tooltipLength = this._getComputedLength(tooltip, property)\r\n    const triggerIsLongest = triggerLength > tooltipLength\r\n\r\n    const offset = triggerIsLongest\r\n      ? (triggerLength - tooltipLength) / 2\r\n      : (tooltipLength - triggerLength) / -2\r\n\r\n    if (property === \"height\") {\r\n      tooltip.style.top = `${offset}px`\r\n    } else {\r\n      tooltip.style.left = `${offset}px`\r\n    }\r\n  }\r\n}\r\n"],"file":"tooltip.js"}