{"version":3,"sources":["../src/tooltip.js"],"names":["KeyCodes","ESCAPE","Selectors","DATA_TOOLTIP","DATA_VISIBLE","DATA_TARGET","ROLE","ARIA_DESCRIBEDBY","DROP_LEFT_CLASS","DROP_RIGHT_CLASS","Events","CLICK","MOUSEOVER","MOUSEOUT","FOCUS","BLUR","Messages","NO_ID_ERROR","NO_TRIGGER_ERROR","id","NO_TOOLTIP_ERROR","Tooltip","_render","bind","_handleClose","_activeTrigger","_activeTooltip","_allTooltipTriggers","document","querySelectorAll","forEach","instance","_setupTooltip","element","getAttribute","trigger","querySelector","_getTrigger","removeEventListener","event","target","tooltipId","getElementById","_isLeftOrRight","_alignTooltip","_showTooltip","_listenForClose","_hideTooltip","_listenForOpen","setAttribute","addEventListener","iOSMobile","body","style","cursor","property","triggerLength","_getComputedLength","tooltipLength","triggerIsLongest","offset","top","left","tooltip","console","error","parseInt","window","getComputedStyle","slice","classes","classList","contains"],"mappings":";;;;;;;AAEA;;;;;;;;AAEA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YAAY,EAAE,cADE;AAEhBC,EAAAA,YAAY,EAAE,cAFE;AAGhBC,EAAAA,WAAW,EAAE,aAHG;AAIhBC,EAAAA,IAAI,EAAE,MAJU;AAKhBC,EAAAA,gBAAgB,EAAE,kBALF;AAMhBC,EAAAA,eAAe,EAAE,cAND;AAOhBC,EAAAA,gBAAgB,EAAE;AAPF,CAAlB;AAUA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,OADM;AAEbC,EAAAA,SAAS,EAAE,WAFE;AAGbC,EAAAA,QAAQ,EAAE,UAHG;AAIbC,EAAAA,KAAK,EAAE,OAJM;AAKbC,EAAAA,IAAI,EAAE;AALO,CAAf;AAQA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,WAAW,EAAE,mCADE;AAEfC,EAAAA,gBAAgB,EAAE,0BAAAC,EAAE;AAAA,iEAAmDA,EAAnD;AAAA,GAFL;AAGfC,EAAAA,gBAAgB,EAAE,0BAAAD,EAAE;AAAA,yDAA2CA,EAA3C;AAAA;AAHL,CAAjB;;IAUqBE,O;AACnB,qBAAc;AAAA;;AAEZ,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAGA,SAAKE,cAAL,GAAsB,IAAtB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AAGA,SAAKC,mBAAL,GAA2B,EAA3B;AACD;;;;4BAIO;AAAA;;AACN,WAAKA,mBAAL,GAA2BC,QAAQ,CAACC,gBAAT,YAA8B3B,SAAS,CAACC,YAAxC,OAA3B;;AAEA,WAAKwB,mBAAL,CAAyBG,OAAzB,CAAiC,UAAAC,QAAQ,EAAI;AAC3C,QAAA,KAAI,CAACC,aAAL,CAAmBD,QAAnB;AACD,OAFD;AAGD;;;2BAEM;AAAA;;AACL,WAAKJ,mBAAL,CAAyBG,OAAzB,CAAiC,UAAAG,OAAO,EAAI;AAC1C,YAAMd,EAAE,GAAGc,OAAO,CAACC,YAAR,CAAqBhC,SAAS,CAACC,YAA/B,CAAX;AACA,YAAMgC,OAAO,GAAGF,OAAO,CAACG,aAAR,CAAsB,MAAI,CAACC,WAAL,CAAiBlB,EAAjB,CAAtB,CAAhB;AAEAc,QAAAA,OAAO,CAACK,mBAAR,CAA4B5B,MAAM,CAACE,SAAnC,EAA8C,MAAI,CAACU,OAAnD;AACAW,QAAAA,OAAO,CAACK,mBAAR,CAA4B5B,MAAM,CAACI,KAAnC,EAA0C,MAAI,CAACQ,OAA/C;AACD,OAND;AAOD;;;4BAIOiB,K,EAAO;AACb,UAAI,KAAKb,cAAT,EAAyB;AACvB,aAAKF,YAAL,CAAkBe,KAAlB;AACD;;AAED,WAAKd,cAAL,GAAsBc,KAAK,CAACC,MAA5B;;AACA,UAAMC,SAAS,GAAG,KAAKhB,cAAL,CAAoBS,YAApB,CAAiChC,SAAS,CAACG,WAA3C,CAAlB;;AACA,WAAKqB,cAAL,GAAsBE,QAAQ,CAACc,cAAT,CAAwBD,SAAxB,CAAtB;;AAEA,UAAI,KAAKE,cAAL,EAAJ,EAA2B;AACzB,aAAKC,aAAL,CAAmB,QAAnB;AACD,OAFD,MAEO;AACL,aAAKA,aAAL,CAAmB,OAAnB;AACD;;AAED,WAAKC,YAAL;;AACA,WAAKC,eAAL;AACD;;;iCAEYP,K,EAAO;AAClB,WAAKQ,YAAL;;AAEA,WAAKC,cAAL;;AAEA,WAAKvB,cAAL,GAAsB,IAAtB;AACA,WAAKC,cAAL,GAAsB,IAAtB;AACD;;;mCAEc;AACb,WAAKA,cAAL,CAAoBuB,YAApB,CAAiC/C,SAAS,CAACE,YAA3C,EAAyD,MAAzD;AACD;;;mCAEc;AACb,WAAKsB,cAAL,CAAoBuB,YAApB,CAAiC/C,SAAS,CAACE,YAA3C,EAAyD,OAAzD;AACD;;;sCAEiB;AAChB,WAAKqB,cAAL,CAAoBa,mBAApB,CAAwC5B,MAAM,CAACE,SAA/C,EAA0D,KAAKU,OAA/D;;AACA,WAAKG,cAAL,CAAoBa,mBAApB,CAAwC5B,MAAM,CAACI,KAA/C,EAAsD,KAAKQ,OAA3D;;AACA,WAAKG,cAAL,CAAoByB,gBAApB,CAAqCxC,MAAM,CAACG,QAA5C,EAAsD,KAAKW,YAA3D;;AACA,WAAKC,cAAL,CAAoByB,gBAApB,CAAqCxC,MAAM,CAACK,IAA5C,EAAkD,KAAKS,YAAvD;;AAEA,UAAI2B,gBAAJ,EAAe;AACbvB,QAAAA,QAAQ,CAACwB,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACD;AACF;;;qCAEgB;AACf,WAAK7B,cAAL,CAAoBa,mBAApB,CAAwC5B,MAAM,CAACG,QAA/C,EAAyD,KAAKW,YAA9D;;AACA,WAAKC,cAAL,CAAoBa,mBAApB,CAAwC5B,MAAM,CAACK,IAA/C,EAAqD,KAAKS,YAA1D;;AACA,WAAKC,cAAL,CAAoByB,gBAApB,CAAqCxC,MAAM,CAACE,SAA5C,EAAuD,KAAKU,OAA5D;;AACA,WAAKG,cAAL,CAAoByB,gBAApB,CAAqCxC,MAAM,CAACI,KAA5C,EAAmD,KAAKQ,OAAxD;;AAEA,UAAI6B,gBAAJ,EAAe;AACbvB,QAAAA,QAAQ,CAACwB,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,MAA7B;AACD;AACF;;;kCAEaC,Q,EAAU;AACtB,UAAMC,aAAa,GAAG,KAAKC,kBAAL,CAAwB,KAAKhC,cAA7B,EAA6C8B,QAA7C,CAAtB;;AACA,UAAMG,aAAa,GAAG,KAAKD,kBAAL,CAAwB,KAAK/B,cAA7B,EAA6C6B,QAA7C,CAAtB;;AACA,UAAMI,gBAAgB,GAAGH,aAAa,GAAGE,aAAzC;AAEA,UAAME,MAAM,GAAGD,gBAAgB,GAC3B,CAACH,aAAa,GAAGE,aAAjB,IAAkC,CADP,GAE3B,CAACA,aAAa,GAAGF,aAAjB,IAAkC,CAAC,CAFvC;;AAIA,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzB,aAAK7B,cAAL,CAAoB2B,KAApB,CAA0BQ,GAA1B,aAAmCD,MAAnC;AACD,OAFD,MAEO;AACL,aAAKlC,cAAL,CAAoB2B,KAApB,CAA0BS,IAA1B,aAAoCF,MAApC;AACD;AACF;;;kCAEa7B,Q,EAAU;AACtB,UAAIZ,EAAE,GAAGY,QAAQ,CAACG,YAAT,CAAsBhC,SAAS,CAACC,YAAhC,CAAT;AACA,UAAIgC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAKC,WAAL,CAAiBlB,EAAjB,CAAvB,CAAd;AACA,UAAI4C,OAAO,GAAGnC,QAAQ,CAACc,cAAT,CAAwBvB,EAAxB,CAAd;;AAEA,UAAI,CAACA,EAAL,EAAS;AACP,eAAO6C,OAAO,CAACC,KAAR,CAAcjD,QAAQ,CAACC,WAAvB,CAAP;AACD;;AAED,UAAI,CAACkB,OAAL,EAAc;AACZ,eAAO6B,OAAO,CAACC,KAAR,CAAcjD,QAAQ,CAACE,gBAAT,CAA0BC,EAA1B,CAAd,CAAP;AACD;;AAED,UAAI,CAAC4C,OAAL,EAAc;AACZ,eAAOC,OAAO,CAACC,KAAR,CAAcjD,QAAQ,CAACI,gBAAT,CAA0BD,EAA1B,CAAd,CAAP;AACD;;AAEDgB,MAAAA,OAAO,CAACc,YAAR,CAAqB/C,SAAS,CAACK,gBAA/B,EAAiDY,EAAjD;AACA4C,MAAAA,OAAO,CAACd,YAAR,CAAqB/C,SAAS,CAACI,IAA/B,EAAqC,SAArC;AAEA6B,MAAAA,OAAO,CAACe,gBAAR,CAAyBxC,MAAM,CAACE,SAAhC,EAA2C,KAAKU,OAAhD;AACAa,MAAAA,OAAO,CAACe,gBAAR,CAAyBxC,MAAM,CAACI,KAAhC,EAAuC,KAAKQ,OAA5C;AACD;;;gCAEWH,E,EAAI;AACd,wBAAWjB,SAAS,CAACG,WAArB,gBAAqCc,EAArC;AACD;;;uCAEkBc,O,EAASsB,Q,EAAU;AACpC,aAAOW,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBnC,OAAxB,EAAiCsB,QAAjC,EAA2Cc,KAA3C,CAAiD,CAAjD,EAAoD,CAAC,CAArD,CAAD,CAAf;AACD;;;qCAEgB;AACf,UAAMC,OAAO,GAAG,KAAK5C,cAAL,CAAoB6C,SAApC;AACA,aAAOD,OAAO,CAACE,QAAR,CAAiBtE,SAAS,CAACM,eAA3B,KAA+C8D,OAAO,CAACE,QAAR,CAAiBtE,SAAS,CAACO,gBAA3B,CAAtD;AACD","sourcesContent":["// TODO: Add tests\r\n\r\nimport { iOSMobile } from \"./utils\"\r\n\r\nconst KeyCodes = {\r\n  ESCAPE: 27,\r\n}\r\n\r\nconst Selectors = {\r\n  DATA_TOOLTIP: \"data-tooltip\",\r\n  DATA_VISIBLE: \"data-visible\",\r\n  DATA_TARGET: \"data-target\",\r\n  ROLE: \"role\",\r\n  ARIA_DESCRIBEDBY: \"aria-describedby\",\r\n  DROP_LEFT_CLASS: \"is-drop-left\",\r\n  DROP_RIGHT_CLASS: \"is-drop-right\",\r\n}\r\n\r\nconst Events = {\r\n  CLICK: \"click\",\r\n  MOUSEOVER: \"mouseover\",\r\n  MOUSEOUT: \"mouseout\",\r\n  FOCUS: \"focus\",\r\n  BLUR: \"blur\",\r\n}\r\n\r\nconst Messages = {\r\n  NO_ID_ERROR: \"Could not find your tooltip's id.\",\r\n  NO_TRIGGER_ERROR: id => `Could not find a tooltip trigger with id of ${id}.`,\r\n  NO_TOOLTIP_ERROR: id => `Could not find a tooltip with id of ${id}.`\r\n}\r\n\r\n/**\r\n * Tooltip component class.\r\n * @module Tooltip\r\n */\r\nexport default class Tooltip {\r\n  constructor() {\r\n    // events\r\n    this._render = this._render.bind(this)\r\n    this._handleClose = this._handleClose.bind(this)\r\n\r\n    // active tooltip\r\n    this._activeTrigger = null\r\n    this._activeTooltip = null\r\n\r\n    // all tooltips\r\n    this._allTooltipTriggers = []\r\n  }\r\n\r\n  // public\r\n\r\n  start() {\r\n    this._allTooltipTriggers = document.querySelectorAll(`[${Selectors.DATA_TOOLTIP}]`)\r\n\r\n    this._allTooltipTriggers.forEach(instance => {\r\n      this._setupTooltip(instance)\r\n    })\r\n  }\r\n\r\n  stop() {\r\n    this._allTooltipTriggers.forEach(element => {\r\n      const id = element.getAttribute(Selectors.DATA_TOOLTIP)\r\n      const trigger = element.querySelector(this._getTrigger(id))\r\n\r\n      element.removeEventListener(Events.MOUSEOVER, this._render)\r\n      element.removeEventListener(Events.FOCUS, this._render)\r\n    })\r\n  }\r\n\r\n  // private\r\n\r\n  _render(event) {\r\n    if (this._activeTooltip) {\r\n      this._handleClose(event)\r\n    }\r\n\r\n    this._activeTrigger = event.target\r\n    const tooltipId = this._activeTrigger.getAttribute(Selectors.DATA_TARGET)\r\n    this._activeTooltip = document.getElementById(tooltipId)\r\n    \r\n    if (this._isLeftOrRight()) {\r\n      this._alignTooltip(\"height\")\r\n    } else {\r\n      this._alignTooltip(\"width\")\r\n    }\r\n\r\n    this._showTooltip()\r\n    this._listenForClose()\r\n  }\r\n\r\n  _handleClose(event) {\r\n    this._hideTooltip()\r\n  \r\n    this._listenForOpen()\r\n\r\n    this._activeTrigger = null\r\n    this._activeTooltip = null\r\n  }\r\n\r\n  _showTooltip() {\r\n    this._activeTooltip.setAttribute(Selectors.DATA_VISIBLE, \"true\")\r\n  }\r\n\r\n  _hideTooltip() {\r\n    this._activeTooltip.setAttribute(Selectors.DATA_VISIBLE, \"false\")\r\n  }\r\n\r\n  _listenForClose() {\r\n    this._activeTrigger.removeEventListener(Events.MOUSEOVER, this._render)\r\n    this._activeTrigger.removeEventListener(Events.FOCUS, this._render)\r\n    this._activeTrigger.addEventListener(Events.MOUSEOUT, this._handleClose)\r\n    this._activeTrigger.addEventListener(Events.BLUR, this._handleClose)\r\n\r\n    if (iOSMobile) {\r\n      document.body.style.cursor = \"pointer\"\r\n    }\r\n  }\r\n\r\n  _listenForOpen() {\r\n    this._activeTrigger.removeEventListener(Events.MOUSEOUT, this._handleClose)\r\n    this._activeTrigger.removeEventListener(Events.BLUR, this._handleClose)\r\n    this._activeTrigger.addEventListener(Events.MOUSEOVER, this._render)\r\n    this._activeTrigger.addEventListener(Events.FOCUS, this._render)\r\n\r\n    if (iOSMobile) {\r\n      document.body.style.cursor = \"auto\"\r\n    }\r\n  }\r\n\r\n  _alignTooltip(property) {\r\n    const triggerLength = this._getComputedLength(this._activeTrigger, property)\r\n    const tooltipLength = this._getComputedLength(this._activeTooltip, property)\r\n    const triggerIsLongest = triggerLength > tooltipLength\r\n\r\n    const offset = triggerIsLongest\r\n      ? (triggerLength - tooltipLength) / 2\r\n      : (tooltipLength - triggerLength) / -2\r\n\r\n    if (property === \"height\") {\r\n      this._activeTooltip.style.top = `${offset}px`\r\n    } else {\r\n      this._activeTooltip.style.left = `${offset}px`\r\n    }\r\n  }\r\n\r\n  _setupTooltip(instance) {\r\n    let id = instance.getAttribute(Selectors.DATA_TOOLTIP)\r\n    let trigger = instance.querySelector(this._getTrigger(id))\r\n    let tooltip = document.getElementById(id)\r\n\r\n    if (!id) {\r\n      return console.error(Messages.NO_ID_ERROR)\r\n    }\r\n\r\n    if (!trigger) {\r\n      return console.error(Messages.NO_TRIGGER_ERROR(id))\r\n    }\r\n\r\n    if (!tooltip) {\r\n      return console.error(Messages.NO_TOOLTIP_ERROR(id))\r\n    }\r\n\r\n    trigger.setAttribute(Selectors.ARIA_DESCRIBEDBY, id)\r\n    tooltip.setAttribute(Selectors.ROLE, \"tooltip\")\r\n\r\n    trigger.addEventListener(Events.MOUSEOVER, this._render)\r\n    trigger.addEventListener(Events.FOCUS, this._render)\r\n  }\r\n\r\n  _getTrigger(id) {\r\n    return `[${Selectors.DATA_TARGET}=\"${id}\"]`\r\n  }\r\n\r\n  _getComputedLength(element, property) {\r\n    return parseInt(window.getComputedStyle(element)[property].slice(0, -2))\r\n  }\r\n\r\n  _isLeftOrRight() {\r\n    const classes = this._activeTooltip.classList\r\n    return classes.contains(Selectors.DROP_LEFT_CLASS) || classes.contains(Selectors.DROP_RIGHT_CLASS)\r\n  }\r\n}\r\n"],"file":"tooltip.js"}