{"version":3,"sources":["../src/tooltip.js"],"names":["KeyCodes","ESCAPE","Selectors","DATA_TOOLTIP","DATA_VISIBLE","DATA_TARGET","ROLE","ARIA_DESCRIBEDBY","DROP_LEFT_CLASS","DROP_RIGHT_CLASS","Events","CLICK","MOUSEOVER","MOUSEOUT","FOCUS","BLUR","KEYDOWN","Messages","NO_ID_ERROR","NO_TRIGGER_ERROR","id","NO_TOOLTIP_ERROR","Tooltip","_render","bind","_handleClose","_handleEscapeKeyPress","_activeTrigger","_activeTooltip","_allTooltips","document","querySelectorAll","forEach","instance","_setupTooltip","getAttribute","trigger","querySelector","_getTrigger","removeEventListener","event","target","tooltipId","getElementById","_isLeftOrRight","_alignTooltip","_showTooltip","_listenForClose","_hideTooltip","_listenForOpen","setAttribute","addEventListener","iOSMobile","body","style","cursor","which","property","triggerLength","_getComputedLength","tooltipLength","triggerIsLongest","offset","top","left","tooltip","console","error","element","parseInt","window","getComputedStyle","slice","classes","classList","contains"],"mappings":"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","sourcesContent":["import { iOSMobile } from \"./utils\"\n\nconst KeyCodes = {\n  ESCAPE: 27,\n}\n\nconst Selectors = {\n  // unique\n  DATA_TOOLTIP: \"data-tooltip\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_TARGET: \"data-target\",\n  // accessibility\n  ROLE: \"role\",\n  ARIA_DESCRIBEDBY: \"aria-describedby\",\n  // classes\n  DROP_LEFT_CLASS: \"is-drop-left\",\n  DROP_RIGHT_CLASS: \"is-drop-right\",\n}\n\nconst Events = {\n  CLICK: \"click\",\n  MOUSEOVER: \"mouseover\",\n  MOUSEOUT: \"mouseout\",\n  FOCUS: \"focus\",\n  BLUR: \"blur\",\n  KEYDOWN: \"keydown\",\n}\n\nconst Messages = {\n  NO_ID_ERROR: \"Could not find your tooltip's id.\",\n  NO_TRIGGER_ERROR: id => `Could not find a tooltip trigger with id of ${id}.`,\n  NO_TOOLTIP_ERROR: id => `Could not find a tooltip with id of ${id}.`,\n}\n\n/**\n * Tooltip component class.\n * @module Tooltip\n */\nexport default class Tooltip {\n  constructor() {\n    // events\n    this._render = this._render.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n\n    // active tooltip\n    this._activeTrigger = null\n    this._activeTooltip = null\n\n    // all tooltips\n    this._allTooltips = []\n  }\n\n  // public\n\n  /**\n   * Begin listening to tooltips.\n   */\n  start() {\n    this._allTooltips = document.querySelectorAll(`[${Selectors.DATA_TOOLTIP}]`)\n\n    this._allTooltips.forEach(instance => {\n      this._setupTooltip(instance)\n    })\n  }\n\n  /**\n   * Stop listening to tooltips.\n   */\n  stop() {\n    this._allTooltips.forEach(instance => {\n      const id = instance.getAttribute(Selectors.DATA_TOOLTIP)\n      const trigger = instance.querySelector(this._getTrigger(id))\n\n      trigger.removeEventListener(Events.MOUSEOVER, this._render)\n      trigger.removeEventListener(Events.FOCUS, this._render)\n    })\n  }\n\n  // private\n\n  /**\n   * Render a tooltip.\n   * @param {Object} event - The event object\n   */\n  _render(event) {\n    this._activeTrigger = event.target\n    const tooltipId = this._activeTrigger.getAttribute(Selectors.DATA_TARGET)\n    this._activeTooltip = document.getElementById(tooltipId)\n\n    // align tooltip to its trigger\n    // -> if the trigger is on the left or right side, use height\n    // -> else use width\n    if (this._isLeftOrRight()) {\n      this._alignTooltip(\"height\")\n    } else {\n      this._alignTooltip(\"width\")\n    }\n\n    this._showTooltip()\n    this._listenForClose()\n  }\n\n  /**\n   * Close a tooltip.\n   */\n  _handleClose() {\n    this._hideTooltip()\n    this._listenForOpen()\n\n    this._activeTrigger = null\n    this._activeTooltip = null\n  }\n\n  /**\n   * Add data-visible attribute to currently active tooltip.\n   */\n  _showTooltip() {\n    this._activeTooltip.setAttribute(Selectors.DATA_VISIBLE, \"true\")\n  }\n\n  /**\n   * Remove data-visible attribute from currently active tooltip.\n   */\n  _hideTooltip() {\n    this._activeTooltip.setAttribute(Selectors.DATA_VISIBLE, \"false\")\n  }\n\n  /**\n   * Stop listening for render events, and start listening to close events.\n   */\n  _listenForClose() {\n    this._activeTrigger.removeEventListener(Events.MOUSEOVER, this._render)\n    this._activeTrigger.removeEventListener(Events.FOCUS, this._render)\n    this._activeTrigger.addEventListener(Events.MOUSEOUT, this._handleClose)\n    this._activeTrigger.addEventListener(Events.BLUR, this._handleClose)\n    document.addEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n\n    if (iOSMobile) {\n      document.body.style.cursor = \"pointer\"\n    }\n  }\n\n  /**\n   * Close a tooltip with the escape key.\n   * @param {Object} event - The event object\n   */\n  _handleEscapeKeyPress(event) {\n    if (event.which === KeyCodes.ESCAPE) {\n      this._handleClose()\n    }\n  }\n\n  /**\n   * Stop listening to close events, start listening for render events.\n   */\n  _listenForOpen() {\n    this._activeTrigger.removeEventListener(Events.MOUSEOUT, this._handleClose)\n    this._activeTrigger.removeEventListener(Events.BLUR, this._handleClose)\n    this._activeTrigger.addEventListener(Events.MOUSEOVER, this._render)\n    this._activeTrigger.addEventListener(Events.FOCUS, this._render)\n    document.removeEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n\n    if (iOSMobile) {\n      document.body.style.cursor = \"auto\"\n    }\n  }\n\n  /**\n   * Aligns a tooltip vertically or horizontally.\n   * @param {String} property - String specifying \"height\" or \"width\"\n   */\n  _alignTooltip(property) {\n    const triggerLength = this._getComputedLength(this._activeTrigger, property)\n    const tooltipLength = this._getComputedLength(this._activeTooltip, property)\n    const triggerIsLongest = triggerLength > tooltipLength\n\n    const offset = triggerIsLongest\n      ? (triggerLength - tooltipLength) / 2\n      : (tooltipLength - triggerLength) / -2\n\n    if (property === \"height\") {\n      this._activeTooltip.style.top = `${offset}px`\n    } else {\n      this._activeTooltip.style.left = `${offset}px`\n    }\n  }\n\n  /**\n   * Setup a tooltip and trigger with appropriate event listeners and attributes.\n   * @param {Object} instance - A tooltip instance\n   */\n  _setupTooltip(instance) {\n    const id = instance.getAttribute(Selectors.DATA_TOOLTIP)\n    const trigger = instance.querySelector(this._getTrigger(id))\n    const tooltip = document.getElementById(id)\n\n    if (!id) {\n      return console.error(Messages.NO_ID_ERROR)\n    }\n\n    if (!trigger) {\n      return console.error(Messages.NO_TRIGGER_ERROR(id))\n    }\n\n    if (!tooltip) {\n      return console.error(Messages.NO_TOOLTIP_ERROR(id))\n    }\n\n    trigger.setAttribute(Selectors.ARIA_DESCRIBEDBY, id)\n    tooltip.setAttribute(Selectors.ROLE, \"tooltip\")\n\n    trigger.addEventListener(Events.MOUSEOVER, this._render)\n    trigger.addEventListener(Events.FOCUS, this._render)\n  }\n\n  /**\n   * Get an attribute selector string.\n   * @param {String} id - A unique tooltip id\n   * @return {String}\n   */\n  _getTrigger(id) {\n    return `[${Selectors.DATA_TARGET}=\"${id}\"]`\n  }\n\n  /**\n   * Render a tooltip.\n   * @param {Object} element - A tooltip element\n   * @param {String} property - The \"height\" or \"width\" property.\n   * @return {Number}\n   */\n  _getComputedLength(element, property) {\n    return parseInt(window.getComputedStyle(element)[property].slice(0, -2))\n  }\n\n  /**\n   * Determine if a tooltip is rendering on the left or right.\n   * @return {Boolean}\n   */\n  _isLeftOrRight() {\n    const classes = this._activeTooltip.classList\n    return (\n      classes.contains(Selectors.DROP_LEFT_CLASS) || classes.contains(Selectors.DROP_RIGHT_CLASS)\n    )\n  }\n}\n"],"file":"tooltip.js"}