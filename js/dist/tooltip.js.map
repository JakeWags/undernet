{"version":3,"sources":["../src/tooltip.js"],"names":["KeyCodes","Selectors","Events","Messages","Tooltip","_isTouchDevice","document","documentElement","_iosMobile","test","navigator","userAgent","_render","bind","_handleClose","_handleOffTooltipTouch","_allTooltipTriggers","_activeTrigger","_activeTooltipId","_activeTooltip","_tooltipIsActive","querySelectorAll","forEach","element","id","getAttribute","trigger","querySelector","tooltip","getElementById","_setupTooltip","removeEventListener","event","preventDefault","target","setAttribute","addEventListener","body","style","cursor","_isLeftOrRight","_alignTooltip","property","parseInt","window","getComputedStyle","slice","classes","classList","contains","triggerLength","_getComputedLength","tooltipLength","triggerIsLongest","offset","top","left"],"mappings":"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","sourcesContent":["const KeyCodes = {}\r\nconst Selectors = {}\r\nconst Events = {}\r\nconst Messages = {\r\n  // no tooltip id, can't create tooltip\r\n}\r\n\r\n\r\n\r\n/**\r\n * Tooltip component class.\r\n * @module Tooltip\r\n */\r\nexport default class Tooltip {\r\n  constructor() {\r\n    // this._isTouchPlatform = /(silk|android|pixel|iphone|ipod)/i.test(navigator.userAgent)\r\n    this._isTouchDevice = typeof document.documentElement !== \"undefined\"\r\n    this._iosMobile = /(iphone|ipod)/i.test(navigator.userAgent)\r\n\r\n    // events\r\n    this._render = this._render.bind(this)\r\n    this._handleClose = this._handleClose.bind(this)\r\n    this._handleOffTooltipTouch = this._handleOffTooltipTouch.bind(this)\r\n\r\n    // active tooltip (touch devices only)\r\n    this._allTooltipTriggers = []\r\n    this._activeTrigger = {}\r\n    this._activeTooltipId = \"\"\r\n    this._activeTooltip = {}\r\n    this._tooltipIsActive = false\r\n  }\r\n\r\n  // public\r\n\r\n  start() {\r\n    this._allTooltipTriggers = document.querySelectorAll(\"[data-tooltip]\")\r\n\r\n    this._allTooltipTriggers.forEach(element => {\r\n      const id = element.getAttribute(\"data-tooltip\")\r\n      const trigger = element.querySelector(`[data-target=\"${id}\"]`)\r\n      const tooltip = document.getElementById(id)\r\n      this._setupTooltip(trigger, tooltip, id)\r\n    })\r\n  }\r\n\r\n  stop() {\r\n    if (this._isTouchDevice) {\r\n      this._allTooltipTriggers.forEach(element => {\r\n        element.removeEventListener(\"click\", this._render)\r\n      })\r\n    }\r\n  }\r\n\r\n  // private\r\n\r\n  _render(event) {\r\n    event.preventDefault()\r\n\r\n    if (this._tooltipIsActive) {\r\n      this._handleClose(event)\r\n    }\r\n\r\n    this._activeTrigger = event.target\r\n    this._activeTooltipId = this._activeTrigger.getAttribute(\"data-target\")\r\n    this._activeTooltip = document.getElementById(this._activeTooltipId)\r\n    this._activeTooltip.setAttribute(\"data-visible\", \"true\")\r\n\r\n    this._activeTooltip.removeEventListener(\"click\", this._render)\r\n    this._activeTooltip.addEventListener(\"click\", this._handleClose)\r\n    document.addEventListener(\"click\", this._handleOffTooltipTouch)\r\n\r\n    if (this._iosMobile) {\r\n      document.body.style.cursor = \"pointer\"\r\n    }\r\n  }\r\n\r\n  _handleClose(event) {\r\n    event.preventDefault()\r\n\r\n    this._activeTooltip.setAttribute(\"data-visible\", \"false\")\r\n    this._activeTooltip.removeEventListener(\"click\", this._handleClose)\r\n    this._activeTooltip.addEventListener(\"click\", this._render)\r\n    document.removeEventListener(\"click\", this._handleOffTooltipTouch)\r\n\r\n    if (this._iosMobile) {\r\n      document.body.style.cursor = \"auto\"\r\n    }\r\n\r\n    this._activeTrigger = null\r\n    this._activeTooltip = null\r\n    this._tooltipIsActive = false\r\n  }\r\n\r\n  _handleOffTooltipTouch(event) {\r\n    if (event.target !== this._activeTrigger) {\r\n      this._handleClose(event)\r\n    }\r\n  }\r\n\r\n  _setupTooltip(trigger, tooltip, id) {\r\n    trigger.setAttribute(\"aria-describedby\", id)\r\n    tooltip.setAttribute(\"role\", \"tooltip\")\r\n\r\n    if (this._isTouchDevice) {\r\n      trigger.addEventListener(\"click\", this._render)\r\n    }\r\n\r\n    if (this._isLeftOrRight(tooltip)) {\r\n      this._alignTooltip(trigger, tooltip, \"height\")\r\n    } else {\r\n      this._alignTooltip(trigger, tooltip, \"width\")\r\n    }\r\n  }\r\n\r\n  _getComputedLength(element, property) {\r\n    return parseInt(window.getComputedStyle(element)[property].slice(0, -2))\r\n  }\r\n\r\n  _isLeftOrRight(tooltip) {\r\n    const classes = tooltip.classList\r\n    return classes.contains(\"is-drop-left\") || classes.contains(\"is-drop-right\")\r\n  }\r\n\r\n  _alignTooltip(trigger, tooltip, property) {\r\n    const triggerLength = this._getComputedLength(trigger, property)\r\n    const tooltipLength = this._getComputedLength(tooltip, property)\r\n    const triggerIsLongest = triggerLength > tooltipLength\r\n\r\n    const offset = triggerIsLongest \r\n      ? ((triggerLength - tooltipLength) / 2) \r\n      : ((tooltipLength - triggerLength) / -2)\r\n\r\n    if (property === \"height\")\r\n      tooltip.style.top = `${offset}px`\r\n    else {\r\n      tooltip.style.left = `${offset}px`\r\n    }\r\n  }\r\n}\r\n"],"file":"tooltip.js"}