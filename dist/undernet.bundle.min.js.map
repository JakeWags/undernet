{"version":3,"file":"undernet.bundle.min.js","sources":["../js/src/utils.js","../js/src/components/modal.js","../js/src/components/accordion.js","../js/src/components/dropdown.js","../js/src/undernet.js"],"sourcesContent":["\"use strict\"\n\nconst keyCodes = {\n  SHIFT: 16,\n  TAB: 9,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n}\n\nconst selectors = {\n  NOT_VISUALLY_HIDDEN: \":not(.is-visually-hidden)\",\n  FOCUSABLE_TAGS: [\"a\", \"button\", \"input\", \"object\", \"select\", \"textarea\", \"[tabindex]\"],\n  KEYBOARD_CLASS: \"using-keyboard\",\n}\n\nconst events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n}\n\n/**\n * Utility methods for DOM traversal and focus trapping.\n * @module Utils\n */\nexport default class Utils {\n  constructor() {\n    this._handleFocusTrapWithTab = this._handleFocusTrapWithTab.bind(this)\n    this._handleFocusTrapWithArrows = this._handleFocusTrapWithArrows.bind(this)\n    this._listenForKeyboard = this._listenForKeyboard.bind(this)\n    this._listenForClick = this._listenForClick.bind(this)\n\n    this.focusContainerSelector = \"\"\n    this.focusableChildren = []\n    this.focusableFirstChild = null\n    this.focusableLastChild = null\n\n    // Used for focus outline helper\n    this.listeningForKeydown = false\n\n    // Used for captureFocus() if options.useArrows is passed\n    this.trapFocusWithArrows = false\n  }\n\n  // public\n\n  /**\n   * Listens to the first and last elements matched from this._getFocusableElements()\n   * @param {String} container - The container's class, attribute, etc.\n   * @param {Object} options - Optional has hof options.\n   */\n  captureFocus(container, options) {\n    this.focusContainerSelector = container\n    this.focusableChildren = this._getFocusableElements(this.focusContainerSelector)\n    this.focusableFirstChild = this.focusableChildren[0]\n    this.focusableLastChild = this.focusableChildren[this.focusableChildren.length - 1]\n\n    if (options) {\n      if (options.useArrows) {\n        this.trapFocusWithArrows = options.useArrows || this.trapFocusWithArrows\n        document.addEventListener(events.KEYDOWN, this._handleFocusTrapWithArrows)\n      }\n    } else {\n      document.addEventListener(events.KEYDOWN, this._handleFocusTrapWithTab)\n    }\n  }\n\n  /**\n   * Stop trapping focus set in this.captureFocus()\n   */\n  releaseFocus() {\n    if (this.trapFocusWithArrows) {\n      document.removeEventListener(events.KEYDOWN, this._handleFocusTrapWithArrows)\n      this.trapFocusWithArrows = false\n    } else {\n      document.removeEventListener(events.KEYDOWN, this._handleFocusTrapWithTab)\n    }\n  }\n\n  /**\n   * Begin listening to _listenForKeyboard()\n   */\n  enableFocusOutline() {\n    document.addEventListener(events.KEYDOWN, this._listenForKeyboard)\n  }\n\n  /**\n   * Completely disable focus outline utility.\n   */\n  disableFocusOutline() {\n    if (this.listeningForKeydown) {\n      document.removeEventListener(events.KEYDOWN, this._listenForKeyboard)\n    } else {\n      document.removeEventListener(events.CLICK, this._listenForClick)\n    }\n  }\n\n  // private\n\n  /**\n   * When a key is pressed, detect if it's tab or shift keys and enable\n   * focus outlines on currently focused element(s). Then, remove keydown listener\n   * and add click listener on _listenForClick().\n   * @param {Object} event - Event (keypress).\n   */\n  _listenForKeyboard(event) {\n    const tabKey = event.which === keyCodes.TAB\n    const shiftKey = event.which === keyCodes.SHIFT || event.shiftKey\n    const arrowUp = event.which === keyCodes.ARROW_UP\n    const arrowDown = event.which === keyCodes.ARROW_DOWN\n\n    if (tabKey || shiftKey || arrowUp || arrowDown) {\n      document.body.classList.add(selectors.KEYBOARD_CLASS)\n      document.removeEventListener(events.KEYDOWN, this._listenForKeyboard)\n      document.addEventListener(events.CLICK, this._listenForClick)\n      this.listeningForKeydown = false\n    }\n  }\n\n  /**\n   * On click, remove selectors.KEYBOARD_CLASS and re-add keydown listener.\n   * @param {Object} event - Event (keypress).\n   */\n  _listenForClick(event) {\n    document.body.classList.remove(selectors.KEYBOARD_CLASS)\n    document.removeEventListener(events.CLICK, this._listenForClick)\n    document.addEventListener(events.KEYDOWN, this._listenForKeyboard)\n    this.listeningForKeydown = true\n  }\n\n  /**\n   * Because IE does not recognize NodeList.forEach(),\n   * we use a cross-browser solution for returning an array of DOM nodes every time.\n   * @param {String} element - A DOM node's class, attribute, etc., to search the document.\n   * @return {Array}\n   */\n  _getElements(element) {\n    const nodeList = document.querySelectorAll(element)\n    return Array.apply(null, nodeList)\n  }\n\n  /**\n   * Creates a string of element selector patterns using common elements.\n   * @param {String} container - The enclosing container's class, attribute, etc.\n   * @return {String}\n   */\n  _getFocusableElements(container) {\n    const focusables = selectors.FOCUSABLE_TAGS.map(element => {\n      return `${container} ${element}${selectors.NOT_VISUALLY_HIDDEN}`\n    })\n\n    return this._getElements(focusables.join(\", \"))\n  }\n\n  /**\n   * Handles focus on first or last child in a container, using tab and tab+shift keys.\n   * @param {Object} event - Event (keypress)\n   */\n  _handleFocusTrapWithTab(event) {\n    const containerElement = document.querySelector(this.focusContainerSelector)\n    const containerActive = document.activeElement === containerElement\n    const firstActive = document.activeElement === this.focusableFirstChild\n    const lastActive = document.activeElement === this.focusableLastChild\n    const tabKey = event.which === keyCodes.TAB\n    const shiftKey = event.which === keyCodes.SHIFT || event.shiftKey\n    const hasShift = shiftKey && tabKey\n    const noShift = !shiftKey && tabKey\n\n    if (shiftKey && tabKey && (firstActive || containerActive)) {\n      event.preventDefault()\n      this.focusableLastChild.focus()\n    } else if (!shiftKey && tabKey && lastActive) {\n      event.preventDefault()\n      this.focusableFirstChild.focus()\n    }\n  }\n\n  /**\n   * Handles focus on the first, last, next, or previous child in a container, using up and down arrow keys.\n   * @param {Object} event - Event (keypress)\n   */\n  _handleFocusTrapWithArrows(event) {\n    const firstActive = document.activeElement === this.focusableFirstChild\n    const lastActive = document.activeElement === this.focusableLastChild\n    const arrowUp = event.which === keyCodes.ARROW_UP\n    const arrowDown = event.which === keyCodes.ARROW_DOWN\n\n    if (arrowUp || arrowDown) {\n      event.preventDefault()\n\n      if (firstActive && arrowUp) {\n        this.focusableLastChild.focus()\n      } else if (lastActive && arrowDown) {\n        this.focusableFirstChild.focus()\n      } else if (arrowDown) {\n        this._focusNextChild()\n      } else if (arrowUp) {\n        this._focusLastChild()\n      }\n    }\n  }\n\n  /**\n   * Focus the next child in this.focusableChildren.\n   */\n  _focusNextChild() {\n    for (let i = 0; i < this.focusableChildren.length; i++) {\n      if (this.focusableChildren[i] === document.activeElement) {\n        this.focusableChildren[i + 1].focus()\n        break\n      }\n    }\n  }\n\n  /**\n   * Focus the previous child in this.focusableChildren.\n   */\n  _focusLastChild() {\n    for (let i = 0; i < this.focusableChildren.length; i++) {\n      if (this.focusableChildren[i] === document.activeElement) {\n        this.focusableChildren[i - 1].focus()\n        break\n      }\n    }\n  }\n}\n","\"use strict\"\n\nimport Utils from \"../utils\"\n\nconst keyCodes = {\n  ESCAPE: 27,\n}\n\nconst selectors = {\n  // unique\n  MODAL_CONTAINER: \"data-modal\",\n  MODAL_ID: \"data-modal-id\",\n  MODAL_BUTTON: \"data-modal-button\",\n  NO_SCROLL: \"no-scroll\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_CLOSE: \"data-close\",\n  DATA_TARGET: \"data-target\",\n  DATA_PARENT: \"data-parent\",\n  // accessibility\n  ARIA_HIDDEN: \"aria-hidden\",\n  ARIA_MODAL: \"aria-modal\",\n  ROLE: \"role\",\n  TABINDEX: \"tabindex\",\n}\n\nconst events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n  RESIZE: \"resize\",\n}\n\nconst messages = {\n  NO_TARGET_ERROR: `Could not find [data-target] attribute associated with a [data-modal-button] element.`,\n  NO_PARENT_ERROR: `Could not find [data-parent] attribute associated with a [data-modal] element.`,\n  NO_ID_ERROR: id =>\n    `Could not find [data-modal-id='${id}'] associated with a [data-modal] element.`,\n}\n\n/**\n * Modal component class.\n * @module Modal\n * @requires Utils\n */\nexport default class Modal extends Utils {\n  constructor() {\n    super()\n    // modal event methods\n    this._render = this._render.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n    this._handleOverlayClick = this._handleOverlayClick.bind(this)\n\n    // all modals\n    this.modals = []\n    this.modalButtons = []\n\n    // active modal\n    this.activeModalButton = null\n    this.activeModalOverlay = null\n    this.activeModal = null\n    this.activeModalId = \"\"\n    this.activeModalOverlayAttr = \"\"\n    this.activeModalSelector = \"\"\n    this.activeModalCloseButtons = []\n\n    // attribute helpers\n    this.modalContainerAttr = `[${selectors.MODAL_CONTAINER}]`\n    this.closeButtonAttr = `[${selectors.MODAL_CONTAINER}] [${selectors.DATA_CLOSE}]`\n  }\n\n  // public\n\n  /**\n   * Add accessible attributes to modal containers\n   * Begin listening to elements with [data-modal-button]\n   */\n  start() {\n    this.modals = this._getElements(this.modalContainerAttr)\n    this.modalButtons = this._getElements(`[${selectors.MODAL_BUTTON}]`)\n\n    this._getFocusableElements(this.modalContainerAttr).forEach(element => {\n      element.setAttribute(selectors.TABINDEX, \"-1\")\n    })\n\n    if (this.modals.length) {\n      this.modals.forEach(modal => {\n        this._setupModal(modal)\n      })\n    }\n\n    if (this.modalButtons.length) {\n      this.modalButtons.forEach(button => {\n        button.addEventListener(events.CLICK, this._render)\n      })\n    }\n  }\n\n  /**\n   * Stop listening to modal buttons\n   */\n  stop() {\n    this.modalButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this._render)\n    })\n  }\n\n  // private\n\n  /**\n   * Find a button through event.target, then render the corresponding modal attribute via matching target id\n   * @param {Object} event - The event object\n   */\n  _render(event) {\n    event.preventDefault()\n    this.activeModalButton = event.target\n\n    if (!this.activeModalButton.getAttribute(selectors.DATA_TARGET)) {\n      return console.error(messages.NO_TARGET_ERROR)\n    }\n\n    this.activeModalId = this.activeModalButton.getAttribute(selectors.DATA_TARGET)\n    this.activeModalOverlayAttr = `[${selectors.MODAL_ID}=\"${this.activeModalId}\"]`\n\n    if (!document.querySelector(this.activeModalOverlayAttr)) {\n      return console.error(messages.NO_ID_ERROR(this.activeModalId))\n    }\n\n    this.activeModalOverlay = document.querySelector(this.activeModalOverlayAttr)\n\n    this.activeModalSelector = `${this.activeModalOverlayAttr} ${this.modalContainerAttr}`\n    this.activeModal = document.querySelector(this.activeModalSelector)\n    this.activeModalCloseButtons = this._getElements(\n      `${this.activeModalOverlayAttr} [${selectors.MODAL_CONTAINER}] [${selectors.DATA_CLOSE}]`,\n    )\n\n    this._getFocusableElements(this.activeModalSelector).forEach(element => {\n      element.setAttribute(selectors.TABINDEX, \"0\")\n    })\n\n    this._handleScrollStop()\n    this.captureFocus(this.activeModalSelector)\n    this.activeModalOverlay.setAttribute(selectors.ARIA_HIDDEN, \"false\")\n    this.activeModal.setAttribute(selectors.TABINDEX, \"-1\")\n    this.activeModalOverlay.setAttribute(selectors.DATA_VISIBLE, \"true\")\n    this.activeModal.focus()\n\n    // offset slight scroll caused by this.activeModal.focus()\n    this.activeModalOverlay.scrollTop = 0\n\n    // begin listening to events\n    document.addEventListener(events.KEYDOWN, this._handleEscapeKeyPress)\n    document.addEventListener(events.CLICK, this._handleOverlayClick)\n    this.activeModalCloseButtons.forEach(button => {\n      button.addEventListener(events.CLICK, this._handleClose)\n    })\n  }\n\n  _setupModal(modal) {\n    let modalId\n    if (!modal.getAttribute(selectors.DATA_PARENT)) {\n      return console.warn(messages.NO_PARENT_ERROR)\n    } else {\n      modalId = modal.getAttribute(selectors.DATA_PARENT)\n    }\n\n    let modalWrapper\n    if (!document.querySelector(`[${selectors.MODAL_ID}='${modalId}']`)) {\n      return console.error(messages.NO_ID_ERROR(modalId))\n    } else {\n      modalWrapper = document.querySelector(`[${selectors.MODAL_ID}='${modalId}']`)\n    }\n\n    modalWrapper.setAttribute(selectors.ARIA_HIDDEN, \"true\")\n    modalWrapper.setAttribute(selectors.DATA_VISIBLE, \"false\")\n    modal.setAttribute(selectors.ARIA_MODAL, \"true\")\n    modal.setAttribute(selectors.ROLE, \"dialog\")\n  }\n\n  /**\n   * Turn off event listeners and reset focus to last selected DOM node (button)\n   * @param {Object} event - Event (keydown or click)\n   */\n  _handleClose(event) {\n    event.preventDefault()\n    this.activeModalOverlay.setAttribute(selectors.DATA_VISIBLE, \"false\")\n    this._handleReturnFocus()\n    this._handleScrollRestore()\n    this.releaseFocus()\n    this.activeModalOverlay.setAttribute(selectors.ARIA_HIDDEN, \"true\")\n    this.activeModal.removeAttribute(selectors.TABINDEX)\n\n    this._getFocusableElements(this.activeModalSelector).forEach(element => {\n      element.setAttribute(selectors.TABINDEX, \"-1\")\n    })\n\n    // stop listening to events\n    document.removeEventListener(events.KEYDOWN, this._handleEscapeKeyPress)\n    document.removeEventListener(events.CLICK, this._handleOverlayClick)\n    this.activeModalCloseButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this._handleClose)\n    })\n  }\n\n  /**\n   * Handles click event on the modal background to close it.\n   * @param {Object} event - Event (keydown)\n   */\n  _handleOverlayClick(event) {\n    if (event.target === this.activeModalOverlay) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Handles escape key event to close the current modal\n   * @param {Object} event - Event (keydown)\n   */\n  _handleEscapeKeyPress(event) {\n    if (event.which === keyCodes.ESCAPE) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Returns focus to the last focused element before the modal was called.\n   * @param {Object} button - The current modal's corresponding button.\n   */\n  _handleReturnFocus() {\n    this.activeModalButton.setAttribute(selectors.TABINDEX, \"-1\")\n    this.activeModalButton.focus()\n    this.activeModalButton.removeAttribute(selectors.TABINDEX)\n  }\n\n  /**\n   * Restores scroll behavior to <html> and <body>\n   */\n  _handleScrollRestore() {\n    document.body.classList.remove(selectors.NO_SCROLL)\n    document.querySelector(\"html\").classList.remove(selectors.NO_SCROLL)\n  }\n\n  /**\n   * Prevents scroll behavior on <html> and <body>\n   */\n  _handleScrollStop() {\n    document.body.classList.add(selectors.NO_SCROLL)\n    document.querySelector(\"html\").classList.add(selectors.NO_SCROLL)\n  }\n}\n","\"use strict\"\n\nimport Utils from \"../utils\"\n\nconst keyCodes = {\n  SPACE: 32,\n}\n\nconst selectors = {\n  // unique\n  ACCORDION_CONTAINER: \"data-accordion\",\n  ACCORDION_ROW: \"data-accordion-row\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_TARGET: \"data-target\",\n  DATA_TOGGLE_MULTIPLE: \"data-toggle-multiple\",\n  DATA_PARENT: \"data-parent\",\n  // accessibility\n  ARIA_EXPANDED: \"aria-expanded\",\n  ARIA_CONTROLS: \"aria-controls\",\n  ARIA_HIDDEN: \"aria-hidden\",\n  ARIA_LABELLEDBY: \"aria-labelledby\",\n  TABINDEX: \"tabindex\",\n}\n\nconst events = {\n  CLICK: \"click\",\n  KEYDOWN: \"keydown\",\n}\n\nconst messages = {\n  NO_VISIBLE_ERROR: id =>\n    `Could not find parent with [data-visible] attribute associated with [data-target='${id}'].`,\n  NO_ROW_ERROR: id => `Could not find [data-accordion-row] associated with ${id}.`,\n  NO_HEADER_ID_ERROR: id => `Could not find header tag associated with [data-target='${id}'].`,\n  NO_PARENT_ERROR: id => `Could not find [data-parent] associated with [data-target='${id}'].`,\n  NO_CONTENT_ERROR: id =>\n    `Could not accordion content block with [id] ${id} associated with [data-target='${id}'].`,\n}\n\n/**\n * Accordion component class.\n * @module Accordion\n * @requires Utils\n */\nexport default class Accordion extends Utils {\n  constructor() {\n    super()\n    // accordion event methods\n    this._render = this._render.bind(this)\n    this._handleSpaceKeyPress = this._handleSpaceKeyPress.bind(this)\n\n    // all accordions\n    this.accordionButtons = []\n    this.accordionContentsAttr = \"\"\n    this.accordionContents = []\n\n    // active accordion\n    this.activeContainer = null\n    this.activeButton = null\n    this.activeAccordionRowId = \"\"\n    this.activeRowAttr = \"\"\n    this.activeRow = \"\"\n    this.activeContainerId = \"\"\n    this.activeContainerAttr = \"\"\n    this.activeContent = null\n    this.activeButtonExpandState = \"\"\n    this.activeContentHiddenState = \"\"\n  }\n\n  // public\n\n  /**\n   * Sets up accordion components and listens to buttons for events.\n   * Begin listening to [data-accordion-button] elements\n   */\n  start() {\n    this.accordionButtons = this._getElements(\n      `[${selectors.ACCORDION_CONTAINER}] [${selectors.DATA_TARGET}]`,\n    )\n\n    if (this.accordionButtons.length) {\n      this.accordionButtons.forEach(button => {\n        this._setupAccordion(button)\n        button.addEventListener(events.CLICK, this._render)\n        button.addEventListener(events.KEYDOWN, this._handleSpaceKeyPress)\n      })\n    }\n  }\n\n  /**\n   * Stop listening to accordion buttons.\n   */\n  stop() {\n    this.accordionButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this._render)\n      button.removeEventListener(events.KEYDOWN, this._handleSpaceKeyPress)\n    })\n  }\n\n  // private\n\n  /**\n   * Add initial attributes to accordion elements.\n   * @param {Element} button - A button element that triggers an accordion.\n   */\n  _setupAccordion(button) {\n    const buttonId = button.getAttribute(selectors.DATA_TARGET)\n\n    if (!document.getElementById(buttonId)) {\n      return console.error(messages.NO_CONTENT_ERROR(buttonId))\n    }\n\n    const buttonContent = document.getElementById(buttonId)\n    const accordionRowAttr = this._getAccordionRowAttr(buttonId)\n\n    if (!document.querySelector(accordionRowAttr)) {\n      return console.error(messages.NO_ROW_ERROR(buttonId))\n    }\n\n    const accordionRow = document.querySelector(accordionRowAttr)\n    const buttonHeaderAttr = this._getPossibleAccordionHeaderAttrs(accordionRowAttr)\n    const buttonHeader = this._getElements(buttonHeaderAttr)[0]\n\n    if (!buttonHeader || !buttonHeader.id) {\n      console.error(messages.NO_HEADER_ID_ERROR(buttonId))\n    }\n\n    const buttonContentChildren = this._getFocusableElements(`#${buttonContent.id}`)\n\n    button.setAttribute(selectors.ARIA_CONTROLS, buttonId)\n    buttonContent.setAttribute(selectors.ARIA_LABELLEDBY, buttonHeader.id)\n\n    if (!accordionRow.getAttribute(selectors.DATA_VISIBLE)) {\n      return console.error(messages.NO_VISIBLE_ERROR(buttonId))\n    }\n\n    const contentShouldExpand = accordionRow.getAttribute(selectors.DATA_VISIBLE)\n    if (contentShouldExpand === \"true\") {\n      buttonContent.style.maxHeight = `${buttonContent.scrollHeight}px`\n      button.setAttribute(selectors.ARIA_EXPANDED, \"true\")\n      buttonContent.setAttribute(selectors.ARIA_HIDDEN, \"false\")\n      buttonContentChildren.forEach(element => {\n        element.setAttribute(selectors.TABINDEX, \"0\")\n      })\n    } else {\n      button.setAttribute(selectors.ARIA_EXPANDED, \"false\")\n      buttonContent.setAttribute(selectors.ARIA_HIDDEN, \"true\")\n      buttonContentChildren.forEach(element => {\n        element.setAttribute(selectors.TABINDEX, \"-1\")\n      })\n    }\n  }\n\n  /**\n   * Build a selector string to be passed into querySelectorAll() / _getElements()\n   * @param {String} - A unique attribute.\n   */\n  _getPossibleAccordionHeaderAttrs(attr) {\n    return `${attr} h1, ${attr} h2, ${attr} h3, ${attr} h4, ${attr} h5, ${attr} h6`\n  }\n\n  /**\n   * Return a unique accordion row attribute selector.\n   * @param {String} id - An id value associated with a given selectors.DATA_TARGET\n   * @return {String}\n   */\n  _getAccordionRowAttr(id) {\n    return `[${selectors.ACCORDION_ROW}='${id}']`\n  }\n\n  /**\n   * Open accordion content associated with an accordion button.\n   * @param {Object} event - The event object.\n   */\n  _render(event) {\n    event.preventDefault()\n\n    this.activeButton = event.target\n    this.activeAccordionRowId = this.activeButton.getAttribute(selectors.DATA_TARGET)\n\n    this.activeRowAttr = this._getAccordionRowAttr(this.activeAccordionRowId)\n    this.activeRow = document.querySelector(this.activeRowAttr)\n\n    if (!this.activeButton.getAttribute(selectors.DATA_PARENT)) {\n      return console.error(messages.NO_PARENT_ERROR(this.activeAccordionRowId))\n    }\n\n    this.activeContainerId = this.activeButton.getAttribute(selectors.DATA_PARENT)\n    this.activeContainerAttr = `[${selectors.ACCORDION_CONTAINER}='${this.activeContainerId}']`\n\n    if (!document.querySelector(this.activeContainerAttr)) {\n      return console.error(messages.NO_ACCORDION_ERROR(this.activeContainerId))\n    }\n\n    this.activeContainer = document.querySelector(this.activeContainerAttr)\n    this.activeContent = document.getElementById(this.activeAccordionRowId)\n\n    const accordionButtonState = this.activeRow.getAttribute(selectors.DATA_VISIBLE)\n\n    this.activeButtonExpandState = accordionButtonState === \"true\" ? \"false\" : \"true\"\n    this.activeContentHiddenState = this.activeButtonExpandState === \"false\" ? \"true\" : \"false\"\n\n    this._closeAllIfToggleable()\n    this._toggleSelectedAccordion()\n  }\n\n  /**\n   * If a keypress is the spacebar on a button, open its accordion content.\n   * @param {Object} event - The event object.\n   */\n  _handleSpaceKeyPress(event) {\n    if (event.which === keyCodes.SPACE) this._render(event)\n  }\n\n  /**\n   * If toggling multiple rows at once isn't enabled, close all rows except the selected one.\n   * This ensures the selected one can be closed if it's already open.\n   */\n  _closeAllIfToggleable() {\n    if (this.activeContainer.hasAttribute(selectors.DATA_TOGGLE_MULTIPLE)) return\n\n    const allContentAttr = `${this.activeContainerAttr} [${selectors.ARIA_HIDDEN}]`\n    const allRows = this._getElements(`${this.activeContainerAttr} [${selectors.DATA_VISIBLE}]`)\n    const allContent = this._getElements(allContentAttr)\n    const allButtons = this._getElements(`${this.activeContainerAttr} [${selectors.DATA_TARGET}]`)\n\n    allContent.forEach(content => {\n      if (!(content === this.activeContent)) content.style.maxHeight = null\n    })\n\n    this._getFocusableElements(allContentAttr).forEach(element => {\n      element.setAttribute(selectors.TABINDEX, \"-1\")\n    })\n\n    this._toggleAttributeInCollection(allRows, selectors.DATA_VISIBLE, \"true\", \"false\")\n    this._toggleAttributeInCollection(allButtons, selectors.ARIA_EXPANDED, \"true\", \"false\")\n    this._toggleAttributeInCollection(allContent, selectors.ARIA_HIDDEN, \"false\", \"true\")\n  }\n\n  /**\n   * Toggle the currently selected accordion button's content.\n   */\n  _toggleSelectedAccordion() {\n    this.activeRow.setAttribute(selectors.DATA_VISIBLE, this.activeButtonExpandState)\n    this.activeButton.setAttribute(selectors.ARIA_EXPANDED, this.activeButtonExpandState)\n    this.activeContent.setAttribute(selectors.ARIA_HIDDEN, this.activeContentHiddenState)\n\n    const activeContentBlock = `#${this.activeAccordionRowId}`\n    this._getFocusableElements(activeContentBlock).forEach(element => {\n      const value = this.activeButtonExpandState === \"true\" ? \"0\" : \"-1\"\n      element.setAttribute(selectors.TABINDEX, value)\n    })\n\n    if (this.activeContent.style.maxHeight) {\n      this.activeContent.style.maxHeight = null\n    } else {\n      this.activeContent.style.maxHeight = `${this.activeContent.scrollHeight}px`\n    }\n  }\n\n  /**\n   * Toggles a single attribute of a series of elements.\n   */\n  _toggleAttributeInCollection(elements, attributeName, currentValue, newValue) {\n    elements.forEach(element => {\n      if (element.hasAttribute(attributeName, currentValue)) {\n        element.setAttribute(attributeName, newValue)\n      }\n    })\n  }\n}\n","\"use strict\"\n\nimport Utils from \"../utils\"\n\nconst keyCodes = {\n  TAB: 9,\n  SHIFT: 16,\n  ESCAPE: 27,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n}\n\nconst selectors = {\n  // unique\n  DATA_DROPDOWN: \"data-dropdown\",\n  // common\n  DATA_TARGET: \"data-target\",\n  DATA_PARENT: \"data-parent\",\n  DATA_VISIBLE: \"data-visible\",\n  // accessibility\n  TABINDEX: \"tabindex\",\n  ARIA_HASPOPUP: \"aria-haspopup\",\n  ARIA_CONTROLS: \"aria-controls\",\n  ARIA_LABELLEDBY: \"aria-labelledby\",\n  ARIA_EXPANDED: \"aria-expanded\",\n  ROLE: \"role\",\n}\n\nconst events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n}\n\nconst messages = {\n  NO_PARENT_ERROR: `Could not find dropdown button's [data-parent] attribute.`,\n  NO_DROPDOWN_ERROR: attr => `Could not find dropdown container associated with ${attr}.`,\n  NO_MENU_ERROR: attr => `Could not find menu associated with ${attr}.`,\n}\n\n/**\n * Dropdown component class.\n * @module Dropdown\n * @requires Utils\n */\nexport default class Dropdown extends Utils {\n  constructor() {\n    super()\n    //  dropdown event methods\n    this._render = this._render.bind(this)\n    this._renderWithKeys = this._renderWithKeys.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n    this._handleOffMenuClick = this._handleOffMenuClick.bind(this)\n    this._handleFirstTabClose = this._handleFirstTabClose.bind(this)\n    this._handleLastTabClose = this._handleLastTabClose.bind(this)\n\n    // active dropdown\n    this.activeDropdownButton = null\n    this.activeDropdown = null\n    this.activeDropdownMenu = null\n    this.activeDropdownLinks = []\n    this.allowFocusReturn = true\n    this.activeDropdownId = \"\"\n    this.activeDropdownAttr = \"\"\n    this.activeDropdownMenuId = \"\"\n\n    // all dropdowns\n    this.dropdownButtons = []\n    this.dropdowns = []\n\n    // dropdown element selectors\n    this.dropdownTargetAttr = `[${selectors.DATA_TARGET}]`\n    this.dropdownButtonAttr = `[${selectors.DATA_DROPDOWN}] > ${this.dropdownTargetAttr}`\n  }\n\n  // public\n\n  /**\n   * Find and set up dropdown buttons and menus.\n   * Begin listening to dropdowns for events.\n   */\n  start() {\n    this.dropdowns = this._getElements(`[${selectors.DATA_DROPDOWN}]`)\n    this.dropdownButtons = this._getElements(this.dropdownButtonAttr)\n\n    if (this.dropdowns.length) {\n      this.dropdowns.forEach(dropdown => this._setupDropdown(dropdown))\n    }\n\n    this.dropdownButtons.forEach(button => {\n      button.addEventListener(events.CLICK, this._render)\n      button.addEventListener(events.KEYDOWN, this._renderWithKeys)\n    })\n  }\n\n  /**\n   * Stop listening for dropdown events.\n   */\n  stop() {\n    this.dropdownButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this._render)\n      button.removeEventListener(events.KEYDOWN, this._renderWithKeys)\n    })\n  }\n\n  // private\n\n  /**\n   * Find a button through event.target, then render the corresponding modal attribute via matching target id\n   * @param {Object} event - The event object\n   * @param {Number} key - The key code that called _render()\n   */\n  _render(event, key) {\n    if (!key) event.preventDefault()\n    event.stopPropagation()\n\n    if (this.activeDropdownButton) {\n      this.allowFocusReturn = false\n      this._handleClose(event)\n      this.allowFocusReturn = true\n    }\n\n    // dropdown button / trigger\n    this.activeDropdownButton = event.target\n\n    if (!this.activeDropdownButton.getAttribute(selectors.DATA_PARENT)) {\n      return messages.NO_PARENT_ERROR\n    }\n\n    this.activeDropdownId = this.activeDropdownButton.getAttribute(selectors.DATA_PARENT)\n\n    this.activeDropdownButton.setAttribute(selectors.ARIA_EXPANDED, \"true\")\n\n    // dropdown container\n    this.activeDropdownAttr = `[${selectors.DATA_DROPDOWN}=\"${this.activeDropdownId}\"]`\n\n    if (!document.querySelector(this.activeDropdownAttr)) {\n      return messages.NO_DROPDOWN_ERROR(this.activeDropdownAttr)\n    }\n\n    this.activeDropdown = document.querySelector(this.activeDropdownAttr)\n\n    // dropdown menu\n    this.activeDropdownMenuId = this.activeDropdownButton.getAttribute(selectors.DATA_TARGET)\n    this.activeDropdownMenu = document.getElementById(this.activeDropdownMenuId)\n\n    // dropdown button\n    this.activeDropdownButton.setAttribute(selectors.ARIA_EXPANDED, \"true\")\n    this.activeDropdown.setAttribute(selectors.DATA_VISIBLE, \"true\")\n\n    // reset button event listener to close the menu, instead of open it\n    this.activeDropdownButton.removeEventListener(events.CLICK, this._render)\n    this.activeDropdownButton.addEventListener(events.CLICK, this._handleClose)\n\n    document.addEventListener(events.KEYDOWN, this._handleEscapeKeyPress)\n    document.addEventListener(events.CLICK, this._handleOffMenuClick)\n\n    this.activeDropdownLinks = this._getDropdownButtons(this.activeDropdownAttr)\n\n    this.firstDropdownLink = this.activeDropdownLinks[0]\n    this.lastDropdownLink = this.activeDropdownLinks[this.activeDropdownLinks.length - 1]\n\n    this.firstDropdownLink.addEventListener(events.KEYDOWN, this._handleFirstTabClose)\n    this.lastDropdownLink.addEventListener(events.KEYDOWN, this._handleLastTabClose)\n\n    if (key && key === keyCodes.ARROW_UP) {\n      this.lastDropdownLink.focus()\n    } else {\n      this.firstDropdownLink.focus()\n    }\n\n    this.activeDropdownLinks.forEach(link => {\n      link.setAttribute(selectors.TABINDEX, \"0\")\n      link.addEventListener(events.CLICK, this._handleClose)\n    })\n\n    this.captureFocus(`${this.activeDropdownAttr} > ul`, { useArrows: true })\n  }\n\n  /**\n   * Closes the dropdown if user uses shift and tab keys on the first dropdown element.\n   * @param {Object} event - The event object\n   */\n  _handleFirstTabClose(event) {\n    const shiftKey = event.which === keyCodes.SHIFT || event.shiftKey\n    const tabKey = event.which === keyCodes.TAB\n\n    if (shiftKey && tabKey) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Closes the dropdown if user uses tab key on the last dropdown element.\n   * @param {Object} event - The event object\n   */\n  _handleLastTabClose(event) {\n    const shiftKey = event.which === keyCodes.SHIFT || event.shiftKey\n    const tabKey = event.which === keyCodes.TAB\n\n    if (tabKey && !shiftKey) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Renders dropdown if the user uses arrow up or down.\n   * @param {Object} event - The event object\n   */\n  _renderWithKeys(event) {\n    if (event.which === keyCodes.ARROW_UP || event.which === keyCodes.ARROW_DOWN) {\n      this._render(event, event.which)\n    }\n  }\n\n  /**\n   * Closes currently open dropdown.\n   * @param {Object} event - The event object\n   */\n  _handleClose(event) {\n    event.preventDefault()\n\n    this.releaseFocus()\n\n    this.activeDropdownButton.setAttribute(selectors.ARIA_EXPANDED, \"false\")\n    this.activeDropdown.setAttribute(selectors.DATA_VISIBLE, \"false\")\n\n    this.activeDropdownLinks.forEach(link => {\n      link.setAttribute(selectors.TABINDEX, \"-1\")\n      link.removeEventListener(events.CLICK, this._handleClose)\n    })\n\n    this.activeDropdownButton.removeEventListener(events.CLICK, this._handleClose)\n    this.activeDropdownButton.addEventListener(events.CLICK, this._render)\n\n    document.removeEventListener(events.KEYDOWN, this._handleEscapeKeyPress)\n    document.removeEventListener(events.CLICK, this._handleOffMenuClick)\n\n    if (this.allowFocusReturn) {\n      this._handleReturnFocus()\n    }\n  }\n\n  /**\n   * Use escape key to close dropdown.\n   * @param {Object} event - The event object\n   */\n  _handleEscapeKeyPress(event) {\n    if (event.which === keyCodes.ESCAPE) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Closes dropdown\n   * @param {Object} event - The event object\n   */\n  _handleOffMenuClick(event) {\n    if (event.target !== this.activeDropdownButton && event.target !== this.activeDropdownMenu) {\n      this._handleClose(event)\n    }\n  }\n\n  /**\n   * Puts focus on a the active dropdown button.\n   */\n  _handleReturnFocus() {\n    this.activeDropdownButton.setAttribute(selectors.TAB_INDEX, \"-1\")\n    this.activeDropdownButton.focus()\n    this.activeDropdownButton.removeAttribute(selectors.TAB_INDEX)\n  }\n\n  /**\n   * Retrieve possible menu links or buttons as an array\n   * @param {String} attr - The unique attribute for a dropdown.\n   */\n  _getDropdownButtons(attr) {\n    return this._getElements(`${attr} > ul > li > a, ${attr} > ul > li > button`)\n  }\n\n  /**\n   * Add starting attributes to a dropdown.\n   * @param {Element} dropdown - A dropdown element.\n   */\n  _setupDropdown(dropdown) {\n    const dropdownId = dropdown.getAttribute(selectors.DATA_DROPDOWN)\n    const dropdownIdAttr = `[${selectors.DATA_DROPDOWN}=\"${dropdownId}\"]`\n    const dropdownMenuItemsAttr = `${dropdownIdAttr} > ul > li`\n\n    if (!document.querySelector(`${dropdownIdAttr} > ul`)) {\n      return messages.NO_MENU_ERROR(dropdownIdAttr)\n    }\n\n    const dropdownMenu = document.querySelector(`${dropdownIdAttr} > ul`)\n    const dropdownButton = document.querySelector(`${dropdownIdAttr} > ${this.dropdownTargetAttr}`)\n\n    dropdownButton.setAttribute(selectors.ARIA_CONTROLS, dropdownMenu.id)\n    dropdownButton.setAttribute(selectors.ARIA_HASPOPUP, \"true\")\n    dropdownButton.setAttribute(selectors.ARIA_EXPANDED, \"false\")\n    dropdownMenu.setAttribute(selectors.ARIA_LABELLEDBY, dropdownButton.id)\n\n    const dropdownMenuItems = this._getElements(dropdownMenuItemsAttr)\n    dropdownMenuItems.forEach(item => item.setAttribute(selectors.ROLE, \"none\"))\n\n    this._getDropdownButtons(dropdownIdAttr).forEach(link => {\n      link.setAttribute(selectors.ROLE, \"menuitem\")\n      link.setAttribute(selectors.TABINDEX, \"-1\")\n    })\n  }\n}\n","\"use strict\"\n\nimport _Modals from \"./components/modal\"\nimport _Accordion from \"./components/accordion\"\nimport _Dropdown from \"./components/dropdown\"\nimport _Utils from \"./utils\"\n\nconst Modals = new _Modals()\nconst Accordions = new _Accordion()\nconst Dropdowns = new _Dropdown()\nconst Utils = new _Utils()\n\nconst Undernet = {\n  // Components\n  Modals,\n  Accordions,\n  Dropdowns,\n\n  // Utils\n  Utils,\n}\n\nUndernet.start = () => {\n  // Components\n  Undernet.Modals.start()\n  Undernet.Accordions.start()\n  Undernet.Dropdowns.start()\n\n  // Utils\n  Undernet.Utils.enableFocusOutline()\n}\n\nUndernet.stop = () => {\n  // Components\n  Undernet.Modals.stop()\n  Undernet.Accordions.stop()\n  Undernet.Dropdowns.stop()\n\n  // Utils\n  Undernet.Utils.disableFocusOutline()\n}\n\nwindow.Undernet = Undernet\nexport default Undernet\n"],"names":["keyCodes","selectors","NOT_VISUALLY_HIDDEN","FOCUSABLE_TAGS","KEYBOARD_CLASS","events","Utils","_handleFocusTrapWithTab","this","bind","_handleFocusTrapWithArrows","_listenForKeyboard","_listenForClick","focusContainerSelector","focusableChildren","focusableFirstChild","focusableLastChild","listeningForKeydown","trapFocusWithArrows","container","options","_getFocusableElements","length","useArrows","document","addEventListener","removeEventListener","event","tabKey","which","shiftKey","arrowUp","arrowDown","body","classList","add","remove","element","nodeList","querySelectorAll","Array","apply","focusables","map","_getElements","join","containerElement","querySelector","containerActive","activeElement","firstActive","lastActive","preventDefault","focus","_focusNextChild","_focusLastChild","i","messages","id","Modal","_render","_this","_handleClose","_handleEscapeKeyPress","_handleOverlayClick","modals","modalButtons","activeModalButton","activeModalOverlay","activeModal","activeModalId","activeModalOverlayAttr","activeModalSelector","activeModalCloseButtons","modalContainerAttr","closeButtonAttr","forEach","setAttribute","modal","_this2","_setupModal","button","_this3","target","getAttribute","_handleScrollStop","captureFocus","scrollTop","_this4","console","error","modalId","modalWrapper","warn","_handleReturnFocus","_handleScrollRestore","releaseFocus","removeAttribute","_this5","NO_VISIBLE_ERROR","NO_ROW_ERROR","NO_HEADER_ID_ERROR","NO_PARENT_ERROR","NO_CONTENT_ERROR","Accordion","_handleSpaceKeyPress","accordionButtons","accordionContentsAttr","accordionContents","activeContainer","activeButton","activeAccordionRowId","activeRowAttr","activeRow","activeContainerId","activeContainerAttr","activeContent","activeButtonExpandState","activeContentHiddenState","_setupAccordion","buttonId","getElementById","buttonContent","accordionRowAttr","_getAccordionRowAttr","accordionRow","buttonHeaderAttr","_getPossibleAccordionHeaderAttrs","buttonHeader","buttonContentChildren","style","maxHeight","scrollHeight","attr","NO_ACCORDION_ERROR","accordionButtonState","_closeAllIfToggleable","_toggleSelectedAccordion","hasAttribute","allContentAttr","allRows","allContent","allButtons","content","_toggleAttributeInCollection","activeContentBlock","value","elements","attributeName","currentValue","newValue","DATA_DROPDOWN","DATA_TARGET","DATA_PARENT","DATA_VISIBLE","TABINDEX","ARIA_HASPOPUP","ARIA_CONTROLS","ARIA_LABELLEDBY","ARIA_EXPANDED","ROLE","Dropdown","_renderWithKeys","_handleOffMenuClick","_handleFirstTabClose","_handleLastTabClose","activeDropdownButton","activeDropdown","activeDropdownMenu","activeDropdownLinks","allowFocusReturn","activeDropdownId","activeDropdownAttr","activeDropdownMenuId","dropdownButtons","dropdowns","dropdownTargetAttr","dropdownButtonAttr","dropdown","_setupDropdown","key","stopPropagation","_getDropdownButtons","firstDropdownLink","lastDropdownLink","link","TAB_INDEX","dropdownId","dropdownIdAttr","dropdownMenuItemsAttr","dropdownMenu","dropdownButton","item","Undernet","Modals","_Modals","Accordions","_Accordion","Dropdowns","_Dropdown","_Utils","start","enableFocusOutline","stop","disableFocusOutline","window"],"mappings":"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"}