{"version":3,"file":"undernet.bundle.js","sources":["../js/src/utils.js","../js/src/components/modal.js","../js/src/components/accordion.js","../js/src/undernet.js"],"sourcesContent":["\"use strict\"\n\nconst keyCodes = {\n  SHIFT: 16,\n  TAB: 9,\n}\n\nconst selectors = {\n  FOCUSABLE_SELECTOR: \":not(.is-visually-hidden)\",\n  FOCUSABLE_TAGS: [\"a\", \"button\", \"input\", \"object\", \"select\", \"textarea\", \"[tabindex]\"],\n}\n\nconst events = {\n  KEYDOWN: \"keydown\",\n}\n\n/**\n * Utility methods for DOM traversal and focus trapping.\n * @module Utils\n */\nexport default class Utils {\n  constructor() {\n    // bind events to Utils\n    this.handleFocusTrap = this.handleFocusTrap.bind(this)\n  }\n\n  /**\n   * Because IE does not recognize NodeList.forEach(), we use a cross-browser solution for returning an array of DOM nodes.\n   * @param {String} element - A DOM node's class, attribute, etc., to search the document.\n   * @return {Array}\n   */\n  getElements(element) {\n    const nodeList = document.querySelectorAll(element)\n    return Array.apply(null, nodeList)\n  }\n\n  /**\n   * Creates a string of element selector patterns using common elements.\n   * @param {String} container - The enclosing container's class, attribute, etc.\n   * @return {String}\n   */\n  getFocusableElements(container) {\n    let focusables = []\n    selectors.FOCUSABLE_TAGS.map(element =>\n      focusables.push(`${container} ${element}${selectors.FOCUSABLE_SELECTOR}`),\n    )\n    return this.getElements(focusables.join(\", \"))\n  }\n\n  /**\n   * Listens to the first and last elements matched from this.getFocusableElements()\n   * @param {String} container - The container's class, attribute, etc.\n   */\n  captureFocus(container) {\n    this.focusContainer = container\n    const children = this.getFocusableElements(this.focusContainer)\n    this.focusableFirstChild = children[0]\n    this.focusableLastChild = children[children.length - 1]\n\n    document.addEventListener(events.KEYDOWN, this.handleFocusTrap)\n  }\n\n  /**\n   * Handles focus on first or last child in a container.\n   * @param {Object} event - Event (keypress)\n   */\n  handleFocusTrap(event) {\n    const active = document.activeElement\n    const containerElement = document.querySelector(this.focusContainer)\n    const containerActive = active === containerElement\n    const firstActive = active === this.focusableFirstChild\n    const lastActive = active === this.focusableLastChild\n    const tabKey = event.which === keyCodes.TAB\n    const shiftKey = event.which === keyCodes.SHIFT || event.shiftKey\n    const hasShift = shiftKey && tabKey\n    const noShift = !shiftKey && tabKey\n\n    // Just in case the first or last child have changed -\n    // recapture focus and continue trapping.\n    this.releaseFocus()\n    this.captureFocus(this.focusContainer)\n\n    if (hasShift && (firstActive || containerActive)) {\n      event.preventDefault()\n      this.focusableLastChild.focus()\n    } else if (noShift && lastActive) {\n      event.preventDefault()\n      this.focusableFirstChild.focus()\n    }\n  }\n\n  /**\n   * Stop trapping focus set in this.captureFocus()\n   */\n  releaseFocus() {\n    document.removeEventListener(events.KEYDOWN, this.handleFocusTrap)\n  }\n}\n","\"use strict\"\n\nimport Utils from \"../utils\"\n\nconst keyCodes = {\n  ESCAPE: 27,\n}\n\nconst selectors = {\n  MODAL_CONTAINER: \"data-modal\",\n  MODAL_ID: \"data-modal-id\",\n  MODAL_VISIBLE: \"data-modal-visible\",\n  MODAL_CLOSE: \"data-modal-close\",\n  MODAL_BUTTON: \"data-modal-button\",\n  NO_SCROLL: \"no-scroll\",\n}\n\nconst events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n  RESIZE: \"resize\",\n  // needed to prevent iOS <body> scrolling when the overlay is pressed\n  TOUCHSTART: \"touchstart\",\n}\n\nconst messages = {\n  MISSING_MODAL:\n    \"Your button is missing its corresponding modal. Check to make sure your modal is in the DOM, and that is has a [data-modal-id=*] attribute matching the button ID.\",\n}\n\n/**\n * Modal component class.\n * @module Modal\n * @requires Utils\n */\nexport default class Modal extends Utils {\n  constructor() {\n    super()\n    this.closeButtonAttr = `[${selectors.MODAL_CLOSE}]`\n    this.modalContainerAttr = `[${selectors.MODAL_CONTAINER}]`\n    this.modals = null\n    this.modalButtons = null\n    this.closeButtons = null\n    this.bodyTag = document.body\n    this.htmlTag = document.querySelector(\"html\")\n\n    // bind events to class\n    this.getModal = this.getModal.bind(this)\n    this.handleModalClose = this.handleModalClose.bind(this)\n    this.handleEscapeKeyPress = this.handleEscapeKeyPress.bind(this)\n    this.handleOverlayClick = this.handleOverlayClick.bind(this)\n  }\n\n  /**\n   * Add accessible attributes to modal containers\n   * Begin listening to elements with [data-modal-button]\n   */\n  start() {\n    this.modals = this.getElements(`[${selectors.MODAL_CONTAINER}]`)\n    this.modalButtons = this.getElements(`[${selectors.MODAL_BUTTON}]`)\n    this.closeButtons = this.getElements(this.closeButtonAttr)\n\n    if (this.modals.length) {\n      this.modals.forEach(modal => {\n        modal.setAttribute(\"aria-modal\", \"true\")\n        modal.setAttribute(\"role\", \"dialog\")\n      })\n    }\n\n    if (this.modalButtons.length) {\n      this.modalButtons.forEach(button => {\n        button.addEventListener(events.CLICK, this.getModal)\n      })\n    }\n  }\n\n  /**\n   * Stop listening to modal buttons\n   */\n  stop() {\n    this.modalButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this.getModal)\n    })\n  }\n\n  /**\n   * Locate a button's corresponding modal container.\n   * @param {Object} event - The event object\n   */\n  getModal(event) {\n    event.preventDefault()\n    this.renderModal(event)\n  }\n\n  /**\n   * Find a button through event.target, then render the corresponding modal attribute via matching target id\n   * @param {Object} event - The event object\n   */\n  renderModal(event) {\n    // setup core lightbox properties\n    this.modalButton = event.target\n    this.modalOverlayAttr = `[${selectors.MODAL_ID}='${this.modalButton.id}']`\n    this.modalOverlay = document.querySelector(this.modalOverlayAttr)\n\n    if (!this.modalOverlay) {\n      throw messages.MISSING_MODAL\n      return\n    }\n\n    this.activeModalSelector = `${this.modalOverlayAttr} ${this.modalContainerAttr}`\n    this.activeModal = document.querySelector(this.activeModalSelector)\n    this.modalCloseButtons = this.getElements(`${this.modalOverlayAttr} ${this.closeButtonAttr}`)\n\n    this.handleScrollStop()\n    this.captureFocus(this.activeModalSelector)\n    this.modalOverlay.setAttribute(\"aria-hidden\", \"false\")\n    this.activeModal.setAttribute(\"tabindex\", \"-1\")\n    this.modalOverlay.setAttribute(selectors.MODAL_VISIBLE, \"\")\n    this.activeModal.focus()\n\n    // offset slight scroll caused by this.activeModal.focus()\n    this.modalOverlay.scrollTop = 0\n\n    // begin listening to events\n    document.addEventListener(events.KEYDOWN, this.handleEscapeKeyPress)\n    document.addEventListener(events.CLICK, this.handleOverlayClick)\n    document.addEventListener(events.TOUCHSTART, this.handleOverlayClick)\n    this.modalCloseButtons.forEach(button => {\n      button.addEventListener(events.CLICK, this.handleModalClose)\n    })\n  }\n\n  /**\n   * Turn off event listeners and reset focus to last selected DOM node (button)\n   * @param {Object} event - Event (keydown or click)\n   */\n  handleModalClose(event) {\n    event.preventDefault()\n    this.modalOverlay.removeAttribute(selectors.MODAL_VISIBLE)\n    this.handleReturnFocus()\n    this.handleScrollRestore()\n    this.releaseFocus()\n    this.modalOverlay.setAttribute(\"aria-hidden\", \"true\")\n    this.activeModal.removeAttribute(\"tabindex\")\n\n    // stop listening to events\n    document.removeEventListener(events.KEYDOWN, this.handleEscapeKeyPress)\n    document.removeEventListener(events.CLICK, this.handleOverlayClick)\n    document.removeEventListener(events.TOUCHSTART, this.handleOverlayClick)\n    this.modalCloseButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this.handleModalClose)\n    })\n  }\n\n  /**\n   * Handles click event on the modal background to close it.\n   * @param {Object} event - Event (keydown)\n   */\n  handleOverlayClick(event) {\n    if (event.target !== this.modalOverlay) return\n    this.handleModalClose(event)\n  }\n\n  /**\n   * Handles escape key event to close the current modal\n   * @param {Object} event - Event (keydown)\n   */\n  handleEscapeKeyPress(event) {\n    const escapeKey = event.which === keyCodes.ESCAPE\n    if (escapeKey) {\n      this.handleModalClose(event)\n    }\n  }\n\n  /**\n   * Returns focus to the last focused element before the modal was called.\n   * @param {Object} button - The current modal's corresponding button.\n   */\n  handleReturnFocus() {\n    this.modalButton.setAttribute(\"tabindex\", \"-1\")\n    this.modalButton.focus()\n    this.modalButton.removeAttribute(\"tabindex\")\n  }\n\n  /**\n   * Restores scroll behavior to <html> and <body>\n   */\n  handleScrollRestore() {\n    this.bodyTag.classList.remove(selectors.NO_SCROLL)\n    this.htmlTag.classList.remove(selectors.NO_SCROLL)\n  }\n\n  /**\n   * Prevents scroll behavior on <html> and <body>\n   */\n  handleScrollStop() {\n    this.bodyTag.classList.add(selectors.NO_SCROLL)\n    this.htmlTag.classList.add(selectors.NO_SCROLL)\n  }\n}\n","\"use strict\"\n\nimport Utils from \"../utils\"\n\nconst keyCodes = {\n  SPACE: 32,\n}\n\nconst selectors = {\n  ACCORDION_CONTAINER: \"data-accordion\",\n  ACCORDION_EXPANDED: \"data-accordion-expanded\",\n  ACCORDION_BUTTON: \"data-accordion-button\",\n  ACCORDION_CONTENT: \"data-accordion-content\",\n  ACCORDION_MULTIPLE: \"data-accordion-toggle-multiple\",\n  ACCORDION_PARENT: \"data-accordion-parent\",\n  ARIA_EXPANDED: \"aria-expanded\",\n  ARIA_HIDDEN: \"aria-hidden\",\n}\n\nconst events = {\n  CLICK: \"click\",\n  KEYDOWN: \"keydown\",\n}\n\nconst messages = {\n  MISSING_ACCORDION_CONTENT:\n    \"You have an accordion button that is missing its content block or its [data-accordion-content] attribute.\",\n}\n\n/**\n * Accordion component class.\n * @module Accordion\n * @requires Utils\n */\nexport default class Accordion extends Utils {\n  constructor() {\n    super()\n    this.accordionButtons = null\n    this.accordionContents = null\n    this.activeContainer = null\n\n    // bind events to class\n    this.renderAccordionContent = this.renderAccordionContent.bind(this)\n    this.handleSpaceKeyPress = this.handleSpaceKeyPress.bind(this)\n  }\n\n  /**\n   * Add accessible attributes [data-accordion-button] and [data-accordion-content] elements\n   * Begin listening to [data-accordion-button] elements\n   */\n  start() {\n    this.accordionButtons = this.getElements(`[${selectors.ACCORDION_BUTTON}]`)\n    this.accordionContents = this.getElements(`[${selectors.ACCORDION_CONTENT}]`)\n\n    if (this.accordionButtons.length) {\n      this.accordionButtons.forEach(button => {\n        this.setupButton(button)\n        button.addEventListener(events.CLICK, this.renderAccordionContent)\n        button.addEventListener(events.KEYDOWN, this.handleSpaceKeyPress)\n      })\n    }\n\n    if (this.accordionContents.length) {\n      this.accordionContents.forEach(content => {\n        const contentHiddenState = content.parentNode.getAttribute(selectors.ACCORDION_EXPANDED)\n        const toggleContentHiddenState = contentHiddenState === \"true\" ? \"false\" : \"true\"\n        content.setAttribute(selectors.ARIA_HIDDEN, toggleContentHiddenState)\n      })\n    }\n  }\n\n  /**\n   * Stop listening to accordion buttons.\n   */\n  stop() {\n    this.accordionButtons.forEach(button => {\n      button.removeEventListener(events.CLICK, this.renderAccordionContent)\n      button.removeEventListener(events.KEYDOWN, this.handleSpaceKeyPress)\n    })\n  }\n\n  setupButton(button) {\n    const expandState = button.parentNode.parentNode.getAttribute(selectors.ACCORDION_EXPANDED)\n    const buttonContent = button.parentNode.nextElementSibling\n\n    if (expandState === \"true\") {\n      buttonContent.style.maxHeight = `${buttonContent.scrollHeight}px`\n      button.setAttribute(selectors.ARIA_EXPANDED, \"true\")\n    } else {\n      button.setAttribute(selectors.ARIA_EXPANDED, \"false\")\n    }\n  }\n\n  /**\n   * Open accordion content associated with a [data-accordion-button] element.\n   * @param {Object} event - The event object.\n   */\n  renderAccordionContent(event) {\n    event.preventDefault()\n\n    this.activeButton = event.target\n\n    this.activeRow = this.activeButton.parentNode.parentNode\n    this.activeContainerId = this.activeButton.getAttribute(selectors.ACCORDION_PARENT)\n    this.activeContainerAttr = `[${selectors.ACCORDION_CONTAINER}='${this.activeContainerId}']`\n    this.activeContainer = document.querySelector(this.activeContainerAttr)\n\n    const activeContentId = this.activeButton.getAttribute(selectors.ACCORDION_BUTTON)\n    this.activeContent = document.getElementById(activeContentId)\n\n    const accordionContentHasAttr = this.activeContent.hasAttribute(selectors.ACCORDION_CONTENT)\n    if (!accordionContentHasAttr) {\n      throw messages.MISSING_ACCORDION_CONTENT\n      return\n    }\n\n    const accordionButtonState = this.activeRow.getAttribute(selectors.ACCORDION_EXPANDED)\n    const accordionContentState = this.activeContent.getAttribute(selectors.ACCORDION_CONTENT)\n\n    this.toggleExpandState = accordionButtonState === \"true\" ? \"false\" : \"true\"\n    this.toggleContentState = accordionContentState === \"visible\" ? \"hidden\" : \"visible\"\n    this.toggleHiddenState = this.toggleExpandState === \"false\" ? \"true\" : \"false\"\n\n    this.closeAllIfToggleable()\n    this.toggleSelectedAccordion()\n  }\n\n  /**\n   * If a keypress is the spacebar on a button, open its correlated content.\n   * @param {Object} event - The event object.\n   */\n  handleSpaceKeyPress(event) {\n    if (event.which === keyCodes.SPACE) this.renderAccordionContent(event)\n  }\n\n  /**\n   * If toggling multiple rows at once isn't enabled, close all rows except the selected one.\n   * This ensures the selected one can be closed if it's already open.\n   */\n  closeAllIfToggleable() {\n    if (this.activeContainer.hasAttribute(selectors.ACCORDION_MULTIPLE)) return\n\n    const allRows = this.getElements(\n      `${this.activeContainerAttr} [${selectors.ACCORDION_EXPANDED}]`,\n    )\n\n    const allContent = this.getElements(\n      `${this.activeContainerAttr} [${selectors.ACCORDION_CONTENT}]`,\n    )\n\n    const allButtons = this.getElements(\n      `${this.activeContainerAttr} [${selectors.ACCORDION_BUTTON}]`,\n    )\n\n    allContent.forEach(content => {\n      if (!(content === this.activeContent)) content.style.maxHeight = null\n    })\n\n    this.toggleAttributeInCollection(allRows, selectors.ACCORDION_EXPANDED, \"true\", \"false\")\n    this.toggleAttributeInCollection(allButtons, selectors.ARIA_EXPANDED, \"true\", \"false\")\n    this.toggleAttributeInCollection(allContent, selectors.ARIA_HIDDEN, \"false\", \"true\")\n    this.toggleAttributeInCollection(allContent, selectors.ACCORDION_CONTENT, \"visible\", \"hidden\")\n  }\n\n  /**\n   * Toggle a [data-accordion-button]'s related [data-accordion-content] element.\n   */\n  toggleSelectedAccordion() {\n    this.activeRow.setAttribute(selectors.ACCORDION_EXPANDED, this.toggleExpandState)\n    this.activeContent.setAttribute(selectors.ACCORDION_CONTENT, this.toggleContentState)\n    this.activeButton.setAttribute(selectors.ARIA_EXPANDED, this.toggleExpandState)\n    this.activeContent.setAttribute(selectors.ARIA_HIDDEN, this.toggleHiddenState)\n\n    this.activeContent.style.maxHeight\n      ? (this.activeContent.style.maxHeight = null)\n      : (this.activeContent.style.maxHeight = `${this.activeContent.scrollHeight}px`)\n  }\n\n  /**\n   * Toggles a single attribute of a series of elements within a parent.\n   */\n  toggleAttributeInCollection(elements, attributeName, currentValue, newValue) {\n    elements.forEach(element => {\n      if (element.hasAttribute(attributeName, currentValue)) {\n        element.setAttribute(attributeName, newValue)\n      }\n    })\n  }\n}\n","\"use strict\"\n\nimport Modal from \"./components/modal\"\nimport Accordion from \"./components/accordion\"\n\nconst modals = new Modal()\nconst accordions = new Accordion()\n\nconst Undernet = {\n  modals,\n  accordions,\n}\n\nUndernet.start = () => {\n  Undernet.modals.start()\n  Undernet.accordions.start()\n}\n\nUndernet.stop = () => {\n  Undernet.modals.stop()\n  Undernet.accordions.stop()\n}\n\nwindow.Undernet = Undernet\nexport default Undernet\n"],"names":["keyCodes","SHIFT","TAB","selectors","FOCUSABLE_SELECTOR","FOCUSABLE_TAGS","events","KEYDOWN","Utils","handleFocusTrap","bind","element","nodeList","document","querySelectorAll","Array","apply","container","focusables","map","push","getElements","join","focusContainer","children","getFocusableElements","focusableFirstChild","focusableLastChild","length","addEventListener","event","active","activeElement","containerElement","querySelector","containerActive","firstActive","lastActive","tabKey","which","shiftKey","hasShift","noShift","releaseFocus","captureFocus","preventDefault","focus","removeEventListener","ESCAPE","MODAL_CONTAINER","MODAL_ID","MODAL_VISIBLE","MODAL_CLOSE","MODAL_BUTTON","NO_SCROLL","CLICK","RESIZE","TOUCHSTART","messages","MISSING_MODAL","Modal","closeButtonAttr","modalContainerAttr","modals","modalButtons","closeButtons","bodyTag","body","htmlTag","getModal","handleModalClose","handleEscapeKeyPress","handleOverlayClick","forEach","modal","setAttribute","button","renderModal","modalButton","target","modalOverlayAttr","id","modalOverlay","activeModalSelector","activeModal","modalCloseButtons","handleScrollStop","scrollTop","removeAttribute","handleReturnFocus","handleScrollRestore","escapeKey","classList","remove","add","SPACE","ACCORDION_CONTAINER","ACCORDION_EXPANDED","ACCORDION_BUTTON","ACCORDION_CONTENT","ACCORDION_MULTIPLE","ACCORDION_PARENT","ARIA_EXPANDED","ARIA_HIDDEN","MISSING_ACCORDION_CONTENT","Accordion","accordionButtons","accordionContents","activeContainer","renderAccordionContent","handleSpaceKeyPress","setupButton","contentHiddenState","content","parentNode","getAttribute","toggleContentHiddenState","expandState","buttonContent","nextElementSibling","style","maxHeight","scrollHeight","activeButton","activeRow","activeContainerId","activeContainerAttr","activeContentId","activeContent","getElementById","accordionContentHasAttr","hasAttribute","accordionButtonState","accordionContentState","toggleExpandState","toggleContentState","toggleHiddenState","closeAllIfToggleable","toggleSelectedAccordion","allRows","allContent","allButtons","toggleAttributeInCollection","elements","attributeName","currentValue","newValue","accordions","Undernet","start","stop","window"],"mappings":"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"}